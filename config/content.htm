<h1>About</h1>
<p>測試SStatic</p>
<p>網頁: <a class="Link--inTextBlock" href="https://41023246nfu.github.io/cd2024/">https://41023246nfu.github.io/cd2024/</a></p>
<p>網誌: <a href="https://41023246nfu.github.io/cd2024/blog">https://41023246nfu.github.io/cd2024/blog</a></p>
<p>簡報: <span><a href="https://41023246nfu.github.io/cd2024/reveal">https://41023246nfu.github.io/cd2024/reveal</a></span></p>
<p>倉儲: <a href="https://github.com/41023246nfu/cd2024">https://github.com/41023246nfu/cd2024</a></p>
<p>本 cmsimde 網際內容管理系統的對應 Template 倉儲:</p>
<p style="padding-left: 30px;"><a href="https://github.com/mdecycu/cmsimde_site">https://github.com/mdecycu/cmsimde_site</a></p>
<p style="padding-left: 30px;">此 Template 將 cmsimde 作為子目錄而非子模組, 使用者可以依照需求自行修改</p>
<p style="padding-left: 30px;">倉儲對應網站: <a href="https://mde.tw/cmsimde_site">https://mde.tw/cmsimde_site</a></p>
<h1>cmsimde</h1>
<p><span style="background-color: #ccffcc;">SMap</span> - SiteMap - 依照階次列出網站的所有頁面.</p>
<p><span style="background-color: #ccffcc;">EditA</span> - Edit All page - 將所有頁面放入編輯模式中, 主要用來處理頁面搬遷, 刪除或決定衝突頁面內容版本.</p>
<p><span style="background-color: #ccffcc;">Edit</span> - Edit page - 先選擇要編輯的單一頁面後, 再點選 Edit, 即可進入單一頁面的編輯模式.</p>
<p><span style="background-color: #ccffcc;">Config</span> - Configure Site - 編輯頁面標題與管理者密碼.</p>
<p><span style="background-color: #ccffcc;">Search</span> - 動態頁面內容的關鍵字搜尋.</p>
<p><span style="background-color: #ccffcc;">IUpload</span> - Image file Upload - 圖檔的上傳功能, 可以上傳 jpg, png 與 gif 檔案, 其中若在手機上傳圖檔, 系統會自動將圖片檔案縮小為 800x800 大小.</p>
<p><span style="background-color: #ccffcc;">IList</span> - Image file List - 列出可以直接在頁面編輯模式中引用的圖片檔案.</p>
<p><span style="background-color: #ccffcc;">FUpload</span> - File Upload - 一般檔案的上傳功能, 目前可以上傳的檔案副檔名包括 'jpg', 'png', 'gif', '7z', 'pdf', 'zip', 'ttt', 'stl', 'txt', 'html', 'mp4' 等, 使用者可以自行修改.</p>
<p><span style="background-color: #ccffcc;">FList</span> - File List - 列出可以直接在頁面編輯模式中引用的上傳檔案.</p>
<p><span style="background-color: #ccffcc;">Logout</span> - 登出頁面編輯模式.</p>
<p><span style="background-color: #ccffcc;">Convert</span> - 將動態網站中位於 config/content.htm 檔案, 透過分頁設定轉為 content 目錄中的靜態網頁.</p>
<p><span style="background-color: #ccffcc;">acp</span> - git add, git commit 與 git push, 通常只有在 localhost 或自架主機上利用網頁表單協助將倉儲改版內容推向 Github 倉儲.</p>
<p><span style="background-color: #ccffcc;">SStatic</span> - Start Static Site - 利用 Python 啟動網站伺服功能, 可以讓使用者檢查轉檔後的靜態網站內容.</p>
<p><span style="background-color: #ccffcc;">RStatic</span> - Replit Static Site URL - 僅用於 Replit 模式, 當使用者按下 SStatic 後, 可以按下 RStatic 進入當下尚未推向 Github Pages 的靜態網站.</p>
<p><span style="background-color: #ccffcc;">80</span> - 由 init.py 中 static_port 所決定的連結字串, 一般不使用 80, 只有在 Replit 中為了與動態網站共用 port, 才特別設為 80.</p>
<p></p>
<h1>Replit</h1>
<p><a href="https://replit.com">https://replit.com</a></p>
<p>利用 init_replit 指令安裝所需 Python 模組<br/><br/>chmod u+x init_replit<br/><br/>./init_replit</p>
<p dir="auto">On Replit:</p>
<p dir="auto">.replit: python3 main.py</p>
<p dir="auto">chmod u+x cms init_replit</p>
<p dir="auto">./init_replit</p>
<p dir="auto" style="padding-left: 30px;">for cmsimde_site (not needed): git submodule update --init --recursive</p>
<p dir="auto" style="padding-left: 30px;">for cmsimde: pip install flask flask_cors bs4 lxml pelican markdown gevent</p>
<p dir="auto">password generator: <a href="https://mde.tw/cmsite/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/b92b16621dd0246c352cf13d6463b333/raw/0bfa669750aba3abe48554509bbd43d65b6e5c82/hashlib_password_generator.py">https://mde.tw/cmsite/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/b92b16621dd0246c352cf13d6463b333/raw/0bfa669750aba3abe48554509bbd43d65b6e5c82/hashlib_password_generator.py</a> </p>
<p dir="auto"></p>
<p dir="auto">for IPv6 only Ubuntu:<br/><br/>.ssh 目錄中的 config, 將 SSH session 名稱設為 github.com:<br/><br/>Host github.com<br/>User git<br/>Hostname github.com<br/>ProxyCommand /usr/bin/ncat --proxy p4.cycu.org:3128 --proxy-type http %h %p<br/><br/>for Replit:<br/><br/>.ssh 目錄中的 config, 將 SSH session 名稱設為 github.com:<br/><br/>Host github.com<br/>User git<br/>Hostname github.co<br/>#since Replit works for IPv4, therefore no ProxyCommand setting needed<br/>#ProxyCommand /usr/bin/ncat --proxy p4.cycu.org:3128 --proxy-type http %h %p</p>
<p></p>
<p></p>
<h1>Brython</h1>
<p><a href="https://en.wikipedia.org/wiki/Python_(programming_language)">https://en.wikipedia.org/wiki/Python_(programming_language)</a></p>
<h4>Examples:</h4>
<p style="padding-left: 30px;"><a href="https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d">https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d</a></p>
<p style="padding-left: 30px;"><a href="https://www.geeksforgeeks.org/python-programming-examples/">https://www.geeksforgeeks.org/python-programming-examples/</a></p>
<p style="padding-left: 30px;"><a href="https://www.programiz.com/python-programming/examples">https://www.programiz.com/python-programming/examples</a></p>
<p style="padding-left: 30px;"><a href="https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/">https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/</a></p>
<h4>Python Tutorial:</h4>
<p style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/">https://docs.python.org/3/tutorial/</a></p>
<p style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/introduction.html">An informal introduction to Python</a></p>
<h4>Indentation (Python 採 4 個 Spaces 縮排, 以界定執行範圍)</h4>
<h4>Variables (<a href="https://github.com/python/cpython/blob/3.11/Lib/keyword.py">Python Keywords</a>)</h4>
<h4>Comments (# 單行註解, 三個單引號或三個雙引號標註多行註解)</h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#numbers">Numbers</a> (整數 int(), 浮點數 float())</h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#strings">Strings</a> (字串)</h4>
<h4>print (Python 內建函式, <a href="https://docs.python.org/3/library/functions.html#print">print()</a> 函式)</h4>
<p><a href="https://docs.python.org/3/tutorial/controlflow.html">Python control flow tools</a></p>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#for-statements">for</a></h4>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#if-statements">if</a></h4>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#the-range-function">range</a></h4>
<h4>open</h4>
<h4>read</h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#lists">lists</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/datastructures.html#tuples-and-sequences">tuples</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/datastructures.html#dictionaries">dictionaries</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#defining-functions">functions</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/errors.html#exceptions">try ... except</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#break-and-continue-statements-and-else-clauses-on-loops">break</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#pass-statements">pass</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/classes.html?highlight=classes">classes</a></h4>
<p>這個頁面 demo 如何在同一頁面下納入多個線上 Ace 編輯器與執行按鈕 (<a href="/downloads/practice_html.txt">practice_html.txt</a> 動態頁面超文件).</p>
<p><a href="/downloads/practice_html.txt">practice_html.txt</a> 動態頁面超文件應該可以在啟動 Brython 時, 設定將 .py 檔案放入 downloads/py 目錄中引用.</p>
<p>亦即將所有對應的 html 也使用 Brython 產生, 然後寫為 <a href="https://docs.python.org/3/tutorial/classes.html">class</a> 後, 在範例導入時透過 <a href="https://docs.python.org/3/tutorial/classes.html#instance-objects">instance</a> 引用.</p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">&lt;!-- 啟動 Brython --&gt;
&lt;script&gt;
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
&lt;/script&gt;</pre>
<p>從 1 累加到 100:</p>
<p><button id="add1to100">1 add to 100</button></p>
<p>將 iterable 與 iterator <a href="https://home.gamer.com.tw/creationDetail.php?sn=4337438">相關說明</a>, 利用 Brython 與 Ace Editor 整理在這個頁面.</p>
<!-- 導入 brython 程式庫 -->
<p>
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
</p>
<!-- 啟動 Brython -->
<p>
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
</p>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="/static/Cango-24v03-min.js"></script>
<script src="/static/gearUtils-09.js"></script>
<script src="/static/SVGpathUtils-6v03-min.js"></script>
<script src="/static/sylvester.js"></script>
<script src="/static/PrairieDraw.js"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
</script>
</p>
<p><!-- add 1 to 100 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add(ev):
    Ace2.editor.setValue(add_src)
    Ace2.editor.scrollToRow(0)
    Ace2.editor.gotoLine(0)
    Ace2.run()

# id 為 "add1to100" 的按鈕點按時, 執行 add 方法
doc["add1to100"].bind('click', add)
</script>
</p>
<p><!-- add 1 to 100 結束--></p>
<!-- editor1 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor1" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run1">Run</button> <button id="kw_show_console1">Output</button> <button id="kw_clear_console1">清除輸出區</button><button id="clear_bd1">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div1"></div>
<!-- editor1 結束 --><hr/><!-- ########################################## -->
<p>從 1 累加到 100 part2:</p>
<p><button id="add1to100part2">1 add to 100</button><button id="cango_three_gears">cango_three_gears</button><button id="bsnake">BSnake</button><button id="aitetris">AI Tetris</button><button id="threejsblock">Rotating Block</button></p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()
Ace3 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run2():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src2"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace3.editor.setValue(prog)
    Ace3.editor.scrollToRow(0)
    Ace3.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace3.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run2'].bind('click', Ace3.run)
doc['kw_show_console2'].bind('click', Ace3.show_console)
doc['kw_clear_console2'].bind('click', Ace3.clear_console)
doc['clear_bd2'].bind('click', clear_bd2)
# 呼叫函式執行
run2()
</script>
</p>
<p><!-- add 1 to 100 part2 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace4 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )

# 透過 Ace4 以類別建立一個通用的 button2, 可以在多個案例中將 gist 程導入編輯區

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace4.editor.setValue(open(self.url).read())
        Ace4.editor.scrollToRow(0)
        Ace4.editor.gotoLine(0)
        Ace4.run()

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add2(ev):
    Ace4.editor.setValue(add_src)
    Ace4.editor.scrollToRow(0)
    Ace4.editor.gotoLine(0)
    Ace4.run()

# id 為 "add1to100part2" 的按鈕點按時, 執行 add 方法
doc["add1to100part2"].bind('click', add2)
# 以下為運用 button2 class 的通用 gist 程式導入區
################################## cango_three_gears start
cango_three_gears_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/cango_three_gears_brython_div2.py"
cango_three_gears = button2(cango_three_gears_url)
doc["cango_three_gears"].bind("click", cango_three_gears.do)
################################## cango_three_gears end
################################## bsnake start
bsnake_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/kmol_snakey.py"
bsnake = button2(bsnake_url)
doc["bsnake"].bind("click", bsnake.do)
################################## bsnake end
################################## aitetris start
aitetris_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/pygame_to_brython_tetris_ai.py"
aitetris = button2(aitetris_url)
doc["aitetris"].bind("click", aitetris.do)
################################## aitetris end
################################## threejsblock start
threejsblock_url = "https://gist.githubusercontent.com/mdecycu/2c6323eff49b496d1bafd210f3ec9707/raw/df37802f9e8a386b6424f7945af622b1cd0a9ca5/threejs_rotating_block.py"
threejsblock = button2(threejsblock_url)
doc["threejsblock"].bind("click", threejsblock.do)
################################## threejsblock end
</script>
</p>
<p><!-- add 1 to 100 part2 結束--></p>
<!-- editor2 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor2" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename2" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src2', 'kw_filename2');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run2">Run</button> <button id="kw_show_console2">Output</button> <button id="kw_clear_console2">清除輸出區</button><button id="clear_bd2">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console2"></textarea></div>
<h1>影片</h1>
<h2 style="width: 100%; height: 100%;">W1</h2>
<h2>W2</h2>
<h3>cd2024_2a_w2_5 如何利用近端可攜環境與外部 IPv4 開啟動態網站</h3>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/wiDaRDNA2jM?si=JDLj2Q1_xyHwOLJm" title="YouTube video player" width="560"></iframe></p>
<p><span>影片敘述:老師上課教導利用近端可攜環境與外部 IPv4 開啟動態網站</span></p>
<p><span>逐字稿:</span></p>
<p>剛才啊<br/>因爲剛才雖然這個<br/>第一組組長他的系統已經全部登出了對不對<br/>但是剛才的我的privacy還在嗎<br/>哦我們就用一下<br/>所以我們現在想要知道他目前的分組倉儲到<br/>對我們就可以進到CD2024<br/>然後是其中嗎ag1<br/>ag1對吧我們作爲名稱要擺在前面ag1<br/>所以我們就可以進來了對不對<br/>我們想要用SS去來動它<br/>OK<br/>所以我們要clone的部分我們這邊要有section<br/>好然後我們現在<br/>近端這個是近端哦<br/>好所以我把這個拿出來哎我們近端沒有任何section<br/>對吧沒有任何section<br/>表示什麼<br/>假如建了之後啊他這個會存進我們的<br/>這臺系統的登錄單啊<br/>所以我們用來<br/>看這些機制<br/>其實你非常方便你三個倉儲都可以同步<br/>你也不怕Codespaces <br/>上面的這個資源用完你也不怕Replit怎麼擋你<br/>反正你還有regedit而且我們今年每一個人都有一個外部IPV4<br/>就等同有一個示範器<br/>你即便人不在這裏<br/>你在遠端<br/>只要你翻過牆<br/>開他的IP<br/>他就能進來<br/>好所以這裏面我們現在就是<br/>待會我們再來<br/>然後他會跑到不會有<br/>simon下面現在還沒設<br/>所以他不會有<br/>這邊你也要<br/>就是待會我們設<br/>下選之後啊他會跑到稍微<br/>simon這個下面我們要帶着走<br/>OK那其實是又要給那個<br/>長好所以我們就可以從<br/>那裏開始的<br/>我們從putty的section開始<br/>OK所以我打開putty我們就要連線到<br/>1號.com<br/>然後我現在也要把這個篩選把它傳承給他.com<br/>哎然後我現在重點是要把剛才的PPK那個PPK要連給他<br/>OK那現在重點是好<br/>你的PPK啊加C槽<br/>OK你你這樣是過得了的<br/>問題是我給他C槽的<br/>除非這個是我的筆電<br/>對吧否則待會我關機他不見了<br/>我重新開哎他不見了所以我假如<br/>比較妥善的來安排<br/>該會把這個檔案呢放到我的隨身碟那當然我最後會刪掉因爲這個是<br/>這個是第一第一組組長應該做的事都<br/>我把它複製我應該是放面來<br/>OK爲什麼<br/>因爲這樣我只要能夠啓動Y<br/>他就一定在我的學生點裏面而且一定要在Y<br/>因爲我一定會啓動尖端他就一定會在Y的這個目錄下那這樣的話<br/>這都改<br/>我基本上我的一個機制<br/>把它倒歪<br/>倒歪的<br/>對應的這個末路線有沒有<br/>這個這個哇那這樣他就不會跑掉了<br/>對不對因爲我不管是<br/>插進去是一機<br/>我在任何一臺只要我一起<br/>可惜程式環境他<br/>但是重點來了<br/>設好之後他是存在電腦裏面的好我們先先把它設<br/>他了好所以我是選這個時候一存<br/>存好之後我一定要先open因爲他會送給你一把key<br/>這把key是沒有辦法在連線的時候拿的<br/>好所以我accept好了這個可以了已經連過去了因爲我們現在是IP不<br/>所以我們現在是對吧因爲沒有沒<br/>好像很自由但之後又<br/>IPV6你還是得要經過plus的一個<br/>好那我現在已經設好了設<br/>在這裏他就應該會在<br/>先關掉暫時出來再進去看看<br/>所以他會在稍不會有應該simon吧他是用他的名稱<br/>所以還沒有進來好我應該關掉重開因爲<br/>設了之後他應該<br/>所以他應該會在<br/>Simon出來了在這裏<br/>Simon在這裏所以我剛剛設的那個給他.com section啊就是存在這裏<br/>但是我一定要把它輸出來對不對<br/>因爲這裏面就綁定我<br/>現在section名稱就是給他打看<br/>而且是連到給他打看<br/>而且他是指<br/>所以我一定要把這個把<br/>匯出來然後匯出來我一<br/>聲點嘛所以我的學生<br/>是在這個沒有Y沒有Y沒關係我就自己<br/>不是啊<br/>他就會在我可惜的<br/>y的這個老師我把它存起來<br/>呃第一組然後是midag1<br/>然後這個是組長的哦這個是組長的給他.com他的section名稱要給他.com<br/>然後是這個是他的ID<br/>那這樣要幹嘛<br/>改完之後啊<br/>他這個是刪掉<br/>他刪掉之後表<br/>這一臺是從<br/>因爲我剛剛說的section不見哦<br/>我剛設的section不見爲什麼因爲<br/>只有那個key在的時候他纔會有那個section<br/>那我其實<br/>所以我只要下一次重新<br/>我只要進入這裡面然後點兩下這個<br/>他就塞進去了<br/>糟糕因為我這個是開的<br/>啊是不是因為我這個是開的<br/>新增然後是<br/>哎呦發生錯誤哎<br/>無法退出所以我可能<br/>我可能要從一從<br/>所以我看<br/>時候跑到這裡<br/>不能直接的<br/>哎他是躲在<br/>這裡面那我從這裡叫<br/>哎這裡才可以所以表示我不能放在這裡耶<br/>我能放在<br/>我只能從f叫他那這個時候他應該已經進去了好所以你只要看的話我再<br/>他寫應該是出來了<br/>有沒有寫那我把它載入看看<br/>讓我看看我的key是不是一樣在Y<br/>對呀在Y<br/>必須在實體的路徑下點兩下<br/>我已經好了好了要幹嘛好了我就能夠有權限把它clone下來了<br/>好所以我不要再Y了我就把它切換到c<br/>倒在tem上做<br/>哎我要把他<br/>這些就clone過來<br/>OK好那我怎麼怎麼困惹擾git clone<br/>那我不確定他<br/>啊因為大<br/>應該要把每次成<br/>他的子模组的名<br/>在學號我們還沒做這件事<br/>但我不確定他有沒有子模組我用的是<br/>然後我要用SSH<br/>然後我的設定就要給他打開<br/>然後我的帳號因為大家都一樣是到期2024<br/>倉儲是其中報告2a是作業名稱然後MID我們打班他是第一組<br/>意思是說假設我已經有了這個session<br/>對應的key<br/>而且我已經open過了<br/>有這兩個條件的話<br/>我應該有權限把它抓下來那既然你用SSH有權限抓下來<br/>我改版之後就一定推的回去<br/>就這樣那我先看看我我<br/>假如我可以<br/>OK還可以啊所以我一定推的回去啊<br/>所以這個時候我在近端我就自由了我可以啟動動態<br/>好所以這時候我就進到2a因為我沒有特別<br/>就是2a的midag1<br/>就可以進來然後這裡先<br/>所以我在9443我各自獨立可以編輯<br/>我就從HTT<br/>TS然後我到local host的因為<br/>現在是local host的<br/>然後是9443<br/>哎我就可以自己編輯其他人都不能打擾我<br/>對吧好那我先改改一個東西<br/>OK我我登入哎呀這個時候因為是local host<br/>所以我可以很安全的用ABM進來<br/>哎那因為這在好<br/>所以我從這裡我在挖這個<br/>他總是會這樣好<br/>我随身碟可能太老了<br/>因為我是用隨身碟的可攜程式的<br/>好所以進來之後<br/>好所以他速度沒有非常快<br/>好所以我把這個弄進來<br/>github<br/>然後我call<br/>這時候怎麼辦<br/>好我我找一個<br/>那這個時候我我就直接去<br/>所以你看這個s被吊在外面<br/>然后好所以你就可以把这个s把它搬到两个地方来<br/>一個是搬到連結的show一個是搬到他的UL<br/>然後進來他就好了<br/>你要的<br/>是你要的<br/>超文件的<br/>你就可以偶爾繳<br/>的話你就可以除以然後我轉<br/>所以我這個時候我先試試看我能不能<br/>能不能把它推回去<br/>假如可以我就可以改版因為我應該有權限除非他把那個拔掉<br/>好好說現在暫時關<br/>就是我應該開兩個<br/>我告訴他說<br/>那麼哦所以我卡密的<br/>那假如我要讓我的組員<br/>直接連過來該怎麼辦<br/>我当然要先改密码了对吧那第二个我必须要知道我的IP吗好我的IP<br/>這我叫IP了哦<br/>我IP啊<br/>我把他卡車c下來<br/>對我要讓我這台變成是一台主機<br/>只需要跑到<br/>我現在應該在c槽<br/>在c tmp的這個<br/>我抓nit.py出來<br/>這個<br/>有沒有我在這裡<br/>然後我去抓這個答案來改<br/>然後把他的VIP丟給他不再用<br/>好吧儲存<br/>这个时候在CMS<br/>大家都可以动了<br/>OK<br/>然后他会通过防火墙<br/>刚应该有允许他的<br/>到这个9443了<br/>大家都能动哦<br/>那因为我没有要推<br/>我做完之后我就把这个留在这里<br/>然后你用一边弯就进来改没关系反正我也不会推<br/>哦那你就可以试试看<br/>就用这个IP<br/>不再推了<br/>好所以我就可以<br/>骗把他<br/>okay</p>
<h3><span>cd2024_2b_7_w2 利用 codespaces 維護分組網站</span></h3>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/X22HP9fXfVw?si=5UabX2xyTU4dpYfc" title="YouTube video player" width="560"></iframe></p>
<p><span>影片敘述 :老師教導利用 codespaces 維護分組網站</span></p>
<p><span>逐字稿:</span></p>
<p>好所以接下來啊我用<br/>使用這個第一組的<br/>對應的這個模擬示範OK<br/>因為他們已經把<br/>錢包的這個交換內容已經建好了<br/>但我現在想要用<br/>cospaces來維護他<br/>好所以你要仔細看哦<br/>現在每個一個以太坊啊<br/>他其實都有扣的<br/>OK那你假設是看老師的畫面你各組你趕緊弄成這樣之後就可以改版了<br/>然後你就可以直接點這個扣的他就跑其實他就跑這個了<br/>然後你再點這個<br/>你可能會發現這個釦子的任何一個以太坊裡面其實都已經配置了這個海岸基地<br/>這就是一個<br/>線上的整合環境<br/>其實跟rapper也一樣<br/>就是它的介面啊<br/>是用視覺工作室扣<br/>所以你點他的話他香料就會出現了你可以<br/>在這個以太坊底下你可以建立一個<br/>穿越主分支<br/>來建立一個角色扮演<br/>好所以我們就點它<br/>目前我是用<br/>第一組 組長的帳號做的<br/>OK所以他就進入這個就是Rejo studio code的畫面<br/>那首先當然我要先啟動想辦法先啟動他的動態編輯網站對不對<br/>好，我們先看看他的配置<br/>他這就是他的主要內容<br/>功能表<br/>我們比較常用的是這台中階機<br/>喔因為我們啟動動態之後啊<br/>我必須在新增一個中端機上這就是我的整潔的狗屎<br/>Termino的意思<br/>Termino就是輸入指令用<br/>那因為我們關注要啟動動態<br/>第二方面要啟動靜態<br/>好所以我必須在這個<br/>拉出終端機我新增一個<br/>so表示現在我有兩個命令<br/>區<br/>因為他是bong bong洩b o<br/>希望URMSH也洩<br/>所以他其實是可以輸入指令的位置<br/>那你講啊還記得我們在<br/>重述裡面呢<br/>我們啟動的時候這個run其實是執行什麼<br/>我們可以在<br/>對應的設定檔<br/>所以我們在之前講過你知道我把黑燈打開後會做什麼<br/>我們按run啊其實他就是啟動<br/>拍審三去執行他的面<br/>喔他就是讓就是讓這個<br/>就是利用拍審第三版的拍審去執行面點p完<br/>好那我們試試看<br/>相同的在<br/>cosplaces我們就這樣看看<br/>哎呀這個虛擬環境很明顯還沒有我們要的拍審環境啊<br/>我們執行只是看看就知道了好<br/>所以我們這裡就打拍審三<br/>点py<br/>他就马上告诉你说不行哦<br/>因为连Flask都没有<br/>模组没有啊<br/>那模组没有还记得我们在Repri是怎么做的吗<br/>我们是千举目UC加3S<br/>然后是针对什么NIT<br/>April<br/>像这个城市可以执行<br/>紧接着就请他帮我安装对应的模组对吧<br/>哦那你就会发现说哎他速度好像比repe快啊<br/>因为他给的资源相对是多的<br/>哦那应该是快蛮多的<br/>因为他给你免费啊<br/>目前的核心呢<br/>你只要进来<br/>他对应的这个<br/>你这里想要看到底他现在配置给我们什么<br/>你就可以cosplay SIS<br/>然后你就可以看到其实你刚刚已经启动了一个cosplays<br/>OK<br/>然后他的给定的是两个core 8GB<br/>刚刚你讲要注意的话reply给你两gb而已对吧<br/>哎他现在给你8级比两个阔<br/>然后一个月啊他免费的是一天呐<br/>假如to core你用它out<br/>小时的话<br/>他一个月免费是120个COO<br/>所以讲我们今天用了一个小时就用掉两个COO<br/>这样你基本上就剩下118个cow了<br/>用完就没了<br/>所以很显然我们要善用这里面的col<br/>编辑的时候可以不要在上面就不要在上面<br/>只有转档<br/>特定启动的时候在上面<br/>好所以这个时候你就你就知道要怎么省<br/>好所以我这样子安装之后我其实已经可以了<br/>所以我用箭上往上的箭头把刚刚的这个拿拿出来<br/>所以这个时候在直行啊你就会发现说<br/>他就帮我启动一个括号<br/>OK所以在这里就跳出来说哎他已经启动一个括号了<br/>那这个是动态<br/>好所以我就把动态打开来<br/>这个接下来就跟local host<br/>以及我在对应的reply是一样的<br/>所以是小写的ABM n进来<br/>那为什么不需要像reply上学起的这个<br/>secret不用secret啊<br/>因为谁知道我的王子是什么<br/>他每一次中间这个都不一样<br/>所以就有保全的功能<br/>好所以我进来这边我只要会更新会转档就OK了<br/>对吧所以转安打a卡密POS就上去哎呀问题是<br/>那我的静态要怎么看好那静态<br/>因为我有两个吧对不对<br/>这个已经执行拍摄了我在我还有一个啊<br/>所以这里是新的哦我们就要拍审 3<br/>我要执行他的模组<br/>而且是启动HDT p点设的<br/>这个的意思就是因为我们这个系统啊<br/>这个系统带有动态跟静态<br/>那静态我们还有一个index<br/>我们的根部有index可以启动<br/>那你只要看它里面就有这个index<br/>我们把它带到编辑器<br/>index怎么讲的<br/>index就是说你帮我<br/>毫不犹豫的这个是没有任何底内的<br/>0秒他会跳到哪里<br/>他会跳进康天index<br/>content是静态对不对<br/>所以很显然我只要利用这个指令<br/>启动静态我就可以看到了<br/>所以意思是<br/>就跟我在近端一样<br/>哎他又开了一个括号<br/>所以我这里再打开<br/>我就可以同时有动态跟静态<br/>那好处是什么<br/>好处是我改版之后转档马上可以看到<br/>OK那比方说我想要在ABO跟CMS MD这里我要加一个onsep<br/>我到时候指定给某一个组员划零件的部分<br/>我要请他把他相关的连接放到这里来<br/>而且是第一阶段我就把他设有钱<br/>只要我按一下转静态<br/>我马上在这里可以看到<br/>原来这里没有对吧<br/>我现在<br/>有了而且这个是还没有推到给他配置<br/>所以说很方便呢<br/>同样的假如你会写网字<br/>好那我们现在的网字在这里<br/>其实你有部分的设定程式<br/>或者是我们要求你每个礼拜都写的话<br/>那里有一些运算<br/>设计的运算也好<br/>或者是你在里面想要呈现什么样的动态内容<br/>你就可以直接写在网字<br/>而且一转档马上就会出现在这边了<br/>为什么因为现在动态静态两个同时在<br/>而且他的<br/>前面的这个部分是一样<br/>差别在在括号<br/>什么这个是8080哎但是他铺<br/>啊并不是放在后面哦<br/>他全部都用443帮你转哎所以不错啊<br/>对我们来讲非常方便所以我们在这样的一个情况下<br/>你只要觉得两个不够<br/>哎我们他又没有限制我几个装单机<br/>他只限制我们使用的QR对吧<br/>好所以我们脚要编网字<br/>我们一般是不会在这里<br/>不会不会在这里动<br/>那意思说好那我脚要推上去的<br/>那推上去我要用手动了<br/>我要good at<br/>good come meet<br/>啊那这里因为没有get的那个错误了没有了<br/>这全部都是指定<br/>所以我说我ad了昂线<br/>我要开始画<br/>其中的那一个平台对吧<br/>然后给不行就上去了<br/>那上去之后他就会出现在这里呀<br/>他就会出现在这里啊要转档<br/>哦所以这个很方便那因为假如你要退出来他有两个地方退<br/>一个是从这里因为现在目前是active<br/>那这里我是怎么过来的<br/>你只要有启动登录<br/>倒给他吧你只要打给他打看<br/>斜线CO spaces<br/>哎他就进来了那目前我是启动一个cospace<br/>所以你在这里你可以关<br/>你在这里你可以stop<br/>他就不再计算你的CO hour<br/>哎你也可以直接在刚才的这里面<br/>你在这里要怎么关哎不是在那里关在这里关<br/>从这里也可以关<br/>那这个跟刚刚那个是一样<br/>只是这个是在仓储下面<br/>刚才那个是在Cospace的画面下<br/>所以我现在要把它关掉我就跑到我的仓储<br/>跑到这里我就跟他讲我要关我要stop<br/>那这样他就不会进入那个QA<br/>因为我一个月只有120个哎那这个月<br/>最后一天了所以你就尽量用吧<br/>我不晓得他怎么算的啊我们29号了吗<br/>所以你现在120个吧那你可以开通宵了<br/>对吧 3月份重新计算<br/>所以这里等于有一点吃到饱的概念啊<br/>最后一天我不知道他是不是挺算的<br/>啊那这个玻璃但转挡完其实我们的<br/>这一个所谓的<br/>我们从这里面要怎么看他的静态<br/>你只要懒得去拼的话你就跑到p局是这里来<br/>然后你就点这个其实他的规律我们也知道了<br/>所以俺血本应该有在上面在这里<br/>好所以这个影片我们就把它丢到线上然后你剩下的时间呢你就赶快<br/>一方面我加入二方面我就开始<br/>每一个人直接进入到仓储脚已经</p>
<p></p>
<h3><span>cd2024 2a w2 odoo plm簡介 2</span></h3>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/AglFuz3xeEI?si=hX14jbMIE1caPywV" title="YouTube video player" width="560"></iframe></p>
<p>好的<br/>好那麼我這邊建的這個演示是<br/>有這個PRM<br/>主要是這個PR M模組產品生命週期管理<br/>好那你管理者的話進來啊就是你建這個<br/>找的第一個人好<br/>就是你登記的這個直接到<br/>這個odoo打卡OK<br/>然後三亞有一個賬號哎這個<br/>你就是管理者<br/>好然後你可以再加入其他的這個使用者好<br/>然後你一進來之後啊其實你就可以直接<br/>先建一個新的因為我們有主要是有兩個產品嗎<br/>啊就是兩個報告好<br/>那你從這個他這裡<br/>你現在就一旦8個人都早起了之後<br/>你知道他的學號<br/>你就用他學號小老鼠NFU這個email來聯絡他<br/>然後你必須要先把這個死神的這個產品先建起來<br/>好然後他這邊呢主要就是因為我們還沒有還不能賣嗎<br/>就還沒有完成<br/>好所以基本上你定義的部分就是你用新產品<br/>然後定定義一個因為我們要來研究<br/>上學起的這個鋼球平衡臺<br/>好那裡面呢因為他還不能賣所以這裡面沒有意思就還沒完成的意思<br/>好那底下這邊你就可以設定說有沒有啊為了完成這一個<br/>那麼專案或者是產品的開發<br/>你有哪些活動<br/>啊那這邊活動的部分<br/>那一件的啊他那一件可以說我要通知他<br/>我要打電話給他<br/>我要開一個會<br/>然後這個零元件繪圖是我剛加的<br/>好然後你這個新的型別的部分其實是可以自己加的<br/>因為他這一個歐賭最大的這個特色就是說因<br/>為他是開遠的啊然後<br/>你很容易去做刻字畫<br/>好那基本上這個<br/>所謂的這個你活動的類別啊這個只是資料庫其中的一個表單而已<br/>啊所以你只要找到這個TV T的類別你就可以新增<br/>好那這個是代辦事項<br/>好那這個是要求某人要上傳這個相關的檔案打好那你在這邊我就對某<br/>總共對某了三個活動<br/>然後有兩個標誌<br/>啊然後這邊呢其實他這個還不錯就是你進來只要你的標誌<br/>因為我<br/>在裡面只需要打入UL的連線啊他就會直接<br/>啊這個把它變成網址然後我可以可以上傳這個圖擋<br/>好然後這裡面Demo的部分就是<br/>我組長最好就是把把工作都交給別人啊<br/>好所以我這裡面就請第一個主人說你瞭解一下怎麼樣把那太可轉成PDF<br/>好然後我給他5天的時間<br/>好那你有問題你就回報啊然後我告訴第二個主人說哎你到昂血可去<br/>完成這個鋼球平衡臺的領主見繪圖<br/>好然後我叫第三個主頁說那你把它轉到這裡面主力模擬<br/>反正你有7個人可以用嗎啊<br/>然後組長因為要分配啊基本上組長不是不會做我都會做但是麻煩你做<br/>而且時間都定好你有問題你就回報<br/>然後我這邊在模擬說好那關萬你而賽之後啊<br/>他的賬號會收到他的一面<br/>所以他的一面他就會收到這個<br/>啊他總共收到兩個了哈因為可能中間我有更改<br/>那收到的部分呢他這上面就會描述說到底要求你做什麼<br/>然後你只要要回來因為你必須要先到定<br/>啊你必須要先到店之後啊他從這個面有他就可以檢示你到底要我做什麼<br/>所以點回來之後啊我就可以看到這個產品<br/>那這個產品基本上你只要直接登入的話<br/>因為他是還沒有成型的他還在開發根本還沒完成<br/>所以他就時間上的話他是未來產品啊那前面這邊基本上都是<br/>可能都是能賣的或者是零元件或者已經完成的雛形等等<br/>那我們因為沒有還沒完成<br/>所以你只要單獨從他這個組員的賬號進來要看的話<br/>你必須要按這個未來才看得到啊<br/>或者是你從沒有這邊直接點他就會連線回來<br/>我那連線回來你就可以看到他上面這邊呢他他應該<br/>我不曉得他是不是可以讓我們打因為打電話是要付錢的啊應該理論上<br/>他應該不會賭那麼大了啊<br/>就是我們在那邊打的話是他付錢了因為現在是在他的裝置<br/>啊那我不曉得收到電話了要不要付錢啊不曉得是不是0204那種<br/>好那這個不小了<br/>所以這裡面就是說你之前可能還不知道<br/>因為反正他上面沒有我們的欠局的這個信用卡的資料<br/>其實還好<br/>然後只會產生錯誤而已<br/>好所以這裡面你就可以看一下<br/>就是你剛才在指定的部分他就會出現在啊這個頁面上啊<br/>那有問題的話你就跟他編輯說我時間不夠啊<br/>啊然後我不行那你要你要解釋一下到底啊這個進度的這個問題<br/>好然後只要是需要的話你就可以說好那我們開個會<br/>對不對為什麼都是我做的對吧<br/>好那你這裡面開個會大家講清楚<br/>好所以這裡面其實意思就是說你這樣子把所有的過程都留下來的話<br/>其實你所有人就可以分佔在不同的這個時區了<br/>好然後你講有一些議題或者是你到底誰要做這個誰要做那個<br/>好然後把問題每一個時段就是我一天可能花個半小時或者一小時<br/>或者一個禮拜三個小時<br/>好然後我到底做了什麼<br/>然後就這樣做一個交代<br/>所以我想這個你可以先這個可能要好幾個禮拜你才組<br/>組員跟組長之間你才會知道說啊這個要怎麼來使用這個套件了哈<br/>所以你可能先有啊一兩個組員呢你先登記一下PS M這個模組<br/>然後試著模擬看看等到你全部都啊這個瞭解他的這個運作的方式之後啊<br/>然後你再啊把所有的這些主人都把它弄進來<br/>OK所以我現在把它要結束的話我按班次<br/>Ctrl加停止</p>
<p><br/><br/></p>
<h2>W3</h2>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<!-- editor2 結束 --><hr/>
<p>
<script src="https://unpkg.com/three@0.144.0/build/three.js" type="text/javascript"></script>
</p>