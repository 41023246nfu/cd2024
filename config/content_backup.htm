<h1>About</h1>
<p>測試SStatic</p>
<p>網頁: <a class="Link--inTextBlock" href="https://41023246nfu.github.io/cd2024/">https://41023246nfu.github.io/cd2024/</a></p>
<p>網誌: <a href="https://41023246nfu.github.io/cd2024/blog">https://41023246nfu.github.io/cd2024/blog</a></p>
<p>簡報: <span><a href="https://41023246nfu.github.io/cd2024/reveal">https://41023246nfu.github.io/cd2024/reveal</a></span></p>
<p>倉儲: <a href="https://github.com/41023246nfu/cd2024">https://github.com/41023246nfu/cd2024</a></p>
<p>本 cmsimde 網際內容管理系統的對應 Template 倉儲:</p>
<p style="padding-left: 30px;"><a href="https://github.com/mdecycu/cmsimde_site">https://github.com/mdecycu/cmsimde_site</a></p>
<p style="padding-left: 30px;">此 Template 將 cmsimde 作為子目錄而非子模組, 使用者可以依照需求自行修改</p>
<p style="padding-left: 30px;">倉儲對應網站: <a href="https://mde.tw/cmsimde_site">https://mde.tw/cmsimde_site</a></p>
<h1>cmsimde</h1>
<p><span style="background-color: #ccffcc;">SMap</span> - SiteMap - 依照階次列出網站的所有頁面.</p>
<p><span style="background-color: #ccffcc;">EditA</span> - Edit All page - 將所有頁面放入編輯模式中, 主要用來處理頁面搬遷, 刪除或決定衝突頁面內容版本.</p>
<p><span style="background-color: #ccffcc;">Edit</span> - Edit page - 先選擇要編輯的單一頁面後, 再點選 Edit, 即可進入單一頁面的編輯模式.</p>
<p><span style="background-color: #ccffcc;">Config</span> - Configure Site - 編輯頁面標題與管理者密碼.</p>
<p><span style="background-color: #ccffcc;">Search</span> - 動態頁面內容的關鍵字搜尋.</p>
<p><span style="background-color: #ccffcc;">IUpload</span> - Image file Upload - 圖檔的上傳功能, 可以上傳 jpg, png 與 gif 檔案, 其中若在手機上傳圖檔, 系統會自動將圖片檔案縮小為 800x800 大小.</p>
<p><span style="background-color: #ccffcc;">IList</span> - Image file List - 列出可以直接在頁面編輯模式中引用的圖片檔案.</p>
<p><span style="background-color: #ccffcc;">FUpload</span> - File Upload - 一般檔案的上傳功能, 目前可以上傳的檔案副檔名包括 'jpg', 'png', 'gif', '7z', 'pdf', 'zip', 'ttt', 'stl', 'txt', 'html', 'mp4' 等, 使用者可以自行修改.</p>
<p><span style="background-color: #ccffcc;">FList</span> - File List - 列出可以直接在頁面編輯模式中引用的上傳檔案.</p>
<p><span style="background-color: #ccffcc;">Logout</span> - 登出頁面編輯模式.</p>
<p><span style="background-color: #ccffcc;">Convert</span> - 將動態網站中位於 config/content.htm 檔案, 透過分頁設定轉為 content 目錄中的靜態網頁.</p>
<p><span style="background-color: #ccffcc;">acp</span> - git add, git commit 與 git push, 通常只有在 localhost 或自架主機上利用網頁表單協助將倉儲改版內容推向 Github 倉儲.</p>
<p><span style="background-color: #ccffcc;">SStatic</span> - Start Static Site - 利用 Python 啟動網站伺服功能, 可以讓使用者檢查轉檔後的靜態網站內容.</p>
<p><span style="background-color: #ccffcc;">RStatic</span> - Replit Static Site URL - 僅用於 Replit 模式, 當使用者按下 SStatic 後, 可以按下 RStatic 進入當下尚未推向 Github Pages 的靜態網站.</p>
<p><span style="background-color: #ccffcc;">80</span> - 由 init.py 中 static_port 所決定的連結字串, 一般不使用 80, 只有在 Replit 中為了與動態網站共用 port, 才特別設為 80.</p>
<p></p>
<h1>Replit</h1>
<p><a href="https://replit.com">https://replit.com</a></p>
<p>利用 init_replit 指令安裝所需 Python 模組<br/><br/>chmod u+x init_replit<br/><br/>./init_replit</p>
<p dir="auto">On Replit:</p>
<p dir="auto">.replit: python3 main.py</p>
<p dir="auto">chmod u+x cms init_replit</p>
<p dir="auto">./init_replit</p>
<p dir="auto" style="padding-left: 30px;">for cmsimde_site (not needed): git submodule update --init --recursive</p>
<p dir="auto" style="padding-left: 30px;">for cmsimde: pip install flask flask_cors bs4 lxml pelican markdown gevent</p>
<p dir="auto">password generator: <a href="https://mde.tw/cmsite/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/b92b16621dd0246c352cf13d6463b333/raw/0bfa669750aba3abe48554509bbd43d65b6e5c82/hashlib_password_generator.py">https://mde.tw/cmsite/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/b92b16621dd0246c352cf13d6463b333/raw/0bfa669750aba3abe48554509bbd43d65b6e5c82/hashlib_password_generator.py</a> </p>
<p dir="auto"></p>
<p dir="auto">for IPv6 only Ubuntu:<br/><br/>.ssh 目錄中的 config, 將 SSH session 名稱設為 github.com:<br/><br/>Host github.com<br/>User git<br/>Hostname github.com<br/>ProxyCommand /usr/bin/ncat --proxy p4.cycu.org:3128 --proxy-type http %h %p<br/><br/>for Replit:<br/><br/>.ssh 目錄中的 config, 將 SSH session 名稱設為 github.com:<br/><br/>Host github.com<br/>User git<br/>Hostname github.co<br/>#since Replit works for IPv4, therefore no ProxyCommand setting needed<br/>#ProxyCommand /usr/bin/ncat --proxy p4.cycu.org:3128 --proxy-type http %h %p</p>
<p></p>
<p></p>
<h1>Brython</h1>
<p><a href="https://en.wikipedia.org/wiki/Python_(programming_language)">https://en.wikipedia.org/wiki/Python_(programming_language)</a></p>
<h4>Examples:</h4>
<p style="padding-left: 30px;"><a href="https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d">https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d</a></p>
<p style="padding-left: 30px;"><a href="https://www.geeksforgeeks.org/python-programming-examples/">https://www.geeksforgeeks.org/python-programming-examples/</a></p>
<p style="padding-left: 30px;"><a href="https://www.programiz.com/python-programming/examples">https://www.programiz.com/python-programming/examples</a></p>
<p style="padding-left: 30px;"><a href="https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/">https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/</a></p>
<h4>Python Tutorial:</h4>
<p style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/">https://docs.python.org/3/tutorial/</a></p>
<p style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/introduction.html">An informal introduction to Python</a></p>
<h4>Indentation (Python 採 4 個 Spaces 縮排, 以界定執行範圍)</h4>
<h4>Variables (<a href="https://github.com/python/cpython/blob/3.11/Lib/keyword.py">Python Keywords</a>)</h4>
<h4>Comments (# 單行註解, 三個單引號或三個雙引號標註多行註解)</h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#numbers">Numbers</a> (整數 int(), 浮點數 float())</h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#strings">Strings</a> (字串)</h4>
<h4>print (Python 內建函式, <a href="https://docs.python.org/3/library/functions.html#print">print()</a> 函式)</h4>
<p><a href="https://docs.python.org/3/tutorial/controlflow.html">Python control flow tools</a></p>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#for-statements">for</a></h4>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#if-statements">if</a></h4>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#the-range-function">range</a></h4>
<h4>open</h4>
<h4>read</h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#lists">lists</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/datastructures.html#tuples-and-sequences">tuples</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/datastructures.html#dictionaries">dictionaries</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#defining-functions">functions</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/errors.html#exceptions">try ... except</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#break-and-continue-statements-and-else-clauses-on-loops">break</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#pass-statements">pass</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/classes.html?highlight=classes">classes</a></h4>
<p>這個頁面 demo 如何在同一頁面下納入多個線上 Ace 編輯器與執行按鈕 (<a href="/downloads/practice_html.txt">practice_html.txt</a> 動態頁面超文件).</p>
<p><a href="/downloads/practice_html.txt">practice_html.txt</a> 動態頁面超文件應該可以在啟動 Brython 時, 設定將 .py 檔案放入 downloads/py 目錄中引用.</p>
<p>亦即將所有對應的 html 也使用 Brython 產生, 然後寫為 <a href="https://docs.python.org/3/tutorial/classes.html">class</a> 後, 在範例導入時透過 <a href="https://docs.python.org/3/tutorial/classes.html#instance-objects">instance</a> 引用.</p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">&lt;!-- 啟動 Brython --&gt;
&lt;script&gt;
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
&lt;/script&gt;</pre>
<p>從 1 累加到 100:</p>
<p><button id="add1to100">1 add to 100</button></p>
<p>將 iterable 與 iterator <a href="https://home.gamer.com.tw/creationDetail.php?sn=4337438">相關說明</a>, 利用 Brython 與 Ace Editor 整理在這個頁面.</p>
<!-- 導入 brython 程式庫 -->
<p>
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
</p>
<!-- 啟動 Brython -->
<p>
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
</p>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="/static/Cango-24v03-min.js"></script>
<script src="/static/gearUtils-09.js"></script>
<script src="/static/SVGpathUtils-6v03-min.js"></script>
<script src="/static/sylvester.js"></script>
<script src="/static/PrairieDraw.js"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
</script>
</p>
<p><!-- add 1 to 100 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add(ev):
    Ace2.editor.setValue(add_src)
    Ace2.editor.scrollToRow(0)
    Ace2.editor.gotoLine(0)
    Ace2.run()

# id 為 "add1to100" 的按鈕點按時, 執行 add 方法
doc["add1to100"].bind('click', add)
</script>
</p>
<p><!-- add 1 to 100 結束--></p>
<!-- editor1 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor1" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run1">Run</button> <button id="kw_show_console1">Output</button> <button id="kw_clear_console1">清除輸出區</button><button id="clear_bd1">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div1"></div>
<!-- editor1 結束 --><hr/><!-- ########################################## -->
<p>從 1 累加到 100 part2:</p>
<p><button id="add1to100part2">1 add to 100</button><button id="cango_three_gears">cango_three_gears</button><button id="bsnake">BSnake</button><button id="aitetris">AI Tetris</button><button id="threejsblock">Rotating Block</button></p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()
Ace3 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run2():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src2"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace3.editor.setValue(prog)
    Ace3.editor.scrollToRow(0)
    Ace3.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace3.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run2'].bind('click', Ace3.run)
doc['kw_show_console2'].bind('click', Ace3.show_console)
doc['kw_clear_console2'].bind('click', Ace3.clear_console)
doc['clear_bd2'].bind('click', clear_bd2)
# 呼叫函式執行
run2()
</script>
</p>
<p><!-- add 1 to 100 part2 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace4 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )

# 透過 Ace4 以類別建立一個通用的 button2, 可以在多個案例中將 gist 程導入編輯區

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace4.editor.setValue(open(self.url).read())
        Ace4.editor.scrollToRow(0)
        Ace4.editor.gotoLine(0)
        Ace4.run()

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add2(ev):
    Ace4.editor.setValue(add_src)
    Ace4.editor.scrollToRow(0)
    Ace4.editor.gotoLine(0)
    Ace4.run()

# id 為 "add1to100part2" 的按鈕點按時, 執行 add 方法
doc["add1to100part2"].bind('click', add2)
# 以下為運用 button2 class 的通用 gist 程式導入區
################################## cango_three_gears start
cango_three_gears_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/cango_three_gears_brython_div2.py"
cango_three_gears = button2(cango_three_gears_url)
doc["cango_three_gears"].bind("click", cango_three_gears.do)
################################## cango_three_gears end
################################## bsnake start
bsnake_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/kmol_snakey.py"
bsnake = button2(bsnake_url)
doc["bsnake"].bind("click", bsnake.do)
################################## bsnake end
################################## aitetris start
aitetris_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/pygame_to_brython_tetris_ai.py"
aitetris = button2(aitetris_url)
doc["aitetris"].bind("click", aitetris.do)
################################## aitetris end
################################## threejsblock start
threejsblock_url = "https://gist.githubusercontent.com/mdecycu/2c6323eff49b496d1bafd210f3ec9707/raw/df37802f9e8a386b6424f7945af622b1cd0a9ca5/threejs_rotating_block.py"
threejsblock = button2(threejsblock_url)
doc["threejsblock"].bind("click", threejsblock.do)
################################## threejsblock end
</script>
</p>
<p><!-- add 1 to 100 part2 結束--></p>
<!-- editor2 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor2" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename2" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src2', 'kw_filename2');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run2">Run</button> <button id="kw_show_console2">Output</button> <button id="kw_clear_console2">清除輸出區</button><button id="clear_bd2">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console2"></textarea></div>
<h1>影片</h1>
<h2 style="width: 100%; height: 100%;">W1</h2>
<h2>W2</h2>
<h3>cd2024_2a_w2_5 如何利用近端可攜環境與外部 IPv4 開啟動態網站</h3>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/wiDaRDNA2jM?si=JDLj2Q1_xyHwOLJm" title="YouTube video player" width="560"></iframe></p>
<p><span>影片敘述:老師上課教導利用近端可攜環境與外部 IPv4 開啟動態網站</span></p>
<p><span>逐字稿:</span></p>
<p>剛才啊<br/>因爲剛才雖然這個<br/>第一組組長他的系統已經全部登出了對不對<br/>但是剛才的我的privacy還在嗎<br/>哦我們就用一下<br/>所以我們現在想要知道他目前的分組倉儲到<br/>對我們就可以進到CD2024<br/>然後是其中嗎ag1<br/>ag1對吧我們作爲名稱要擺在前面ag1<br/>所以我們就可以進來了對不對<br/>我們想要用SS去來動它<br/>OK<br/>所以我們要clone的部分我們這邊要有section<br/>好然後我們現在<br/>近端這個是近端哦<br/>好所以我把這個拿出來哎我們近端沒有任何section<br/>對吧沒有任何section<br/>表示什麼<br/>假如建了之後啊他這個會存進我們的<br/>這臺系統的登錄單啊<br/>所以我們用來<br/>看這些機制<br/>其實你非常方便你三個倉儲都可以同步<br/>你也不怕Codespaces <br/>上面的這個資源用完你也不怕Replit怎麼擋你<br/>反正你還有regedit而且我們今年每一個人都有一個外部IPV4<br/>就等同有一個示範器<br/>你即便人不在這裏<br/>你在遠端<br/>只要你翻過牆<br/>開他的IP<br/>他就能進來<br/>好所以這裏面我們現在就是<br/>待會我們再來<br/>然後他會跑到不會有<br/>simon下面現在還沒設<br/>所以他不會有<br/>這邊你也要<br/>就是待會我們設<br/>下選之後啊他會跑到稍微<br/>simon這個下面我們要帶着走<br/>OK那其實是又要給那個<br/>長好所以我們就可以從<br/>那裏開始的<br/>我們從putty的section開始<br/>OK所以我打開putty我們就要連線到<br/>1號.com<br/>然後我現在也要把這個篩選把它傳承給他.com<br/>哎然後我現在重點是要把剛才的PPK那個PPK要連給他<br/>OK那現在重點是好<br/>你的PPK啊加C槽<br/>OK你你這樣是過得了的<br/>問題是我給他C槽的<br/>除非這個是我的筆電<br/>對吧否則待會我關機他不見了<br/>我重新開哎他不見了所以我假如<br/>比較妥善的來安排<br/>該會把這個檔案呢放到我的隨身碟那當然我最後會刪掉因爲這個是<br/>這個是第一第一組組長應該做的事都<br/>我把它複製我應該是放面來<br/>OK爲什麼<br/>因爲這樣我只要能夠啓動Y<br/>他就一定在我的學生點裏面而且一定要在Y<br/>因爲我一定會啓動尖端他就一定會在Y的這個目錄下那這樣的話<br/>這都改<br/>我基本上我的一個機制<br/>把它倒歪<br/>倒歪的<br/>對應的這個末路線有沒有<br/>這個這個哇那這樣他就不會跑掉了<br/>對不對因爲我不管是<br/>插進去是一機<br/>我在任何一臺只要我一起<br/>可惜程式環境他<br/>但是重點來了<br/>設好之後他是存在電腦裏面的好我們先先把它設<br/>他了好所以我是選這個時候一存<br/>存好之後我一定要先open因爲他會送給你一把key<br/>這把key是沒有辦法在連線的時候拿的<br/>好所以我accept好了這個可以了已經連過去了因爲我們現在是IP不<br/>所以我們現在是對吧因爲沒有沒<br/>好像很自由但之後又<br/>IPV6你還是得要經過plus的一個<br/>好那我現在已經設好了設<br/>在這裏他就應該會在<br/>先關掉暫時出來再進去看看<br/>所以他會在稍不會有應該simon吧他是用他的名稱<br/>所以還沒有進來好我應該關掉重開因爲<br/>設了之後他應該<br/>所以他應該會在<br/>Simon出來了在這裏<br/>Simon在這裏所以我剛剛設的那個給他.com section啊就是存在這裏<br/>但是我一定要把它輸出來對不對<br/>因爲這裏面就綁定我<br/>現在section名稱就是給他打看<br/>而且是連到給他打看<br/>而且他是指<br/>所以我一定要把這個把<br/>匯出來然後匯出來我一<br/>聲點嘛所以我的學生<br/>是在這個沒有Y沒有Y沒關係我就自己<br/>不是啊<br/>他就會在我可惜的<br/>y的這個老師我把它存起來<br/>呃第一組然後是midag1<br/>然後這個是組長的哦這個是組長的給他.com他的section名稱要給他.com<br/>然後是這個是他的ID<br/>那這樣要幹嘛<br/>改完之後啊<br/>他這個是刪掉<br/>他刪掉之後表<br/>這一臺是從<br/>因爲我剛剛說的section不見哦<br/>我剛設的section不見爲什麼因爲<br/>只有那個key在的時候他纔會有那個section<br/>那我其實<br/>所以我只要下一次重新<br/>我只要進入這裡面然後點兩下這個<br/>他就塞進去了<br/>糟糕因為我這個是開的<br/>啊是不是因為我這個是開的<br/>新增然後是<br/>哎呦發生錯誤哎<br/>無法退出所以我可能<br/>我可能要從一從<br/>所以我看<br/>時候跑到這裡<br/>不能直接的<br/>哎他是躲在<br/>這裡面那我從這裡叫<br/>哎這裡才可以所以表示我不能放在這裡耶<br/>我能放在<br/>我只能從f叫他那這個時候他應該已經進去了好所以你只要看的話我再<br/>他寫應該是出來了<br/>有沒有寫那我把它載入看看<br/>讓我看看我的key是不是一樣在Y<br/>對呀在Y<br/>必須在實體的路徑下點兩下<br/>我已經好了好了要幹嘛好了我就能夠有權限把它clone下來了<br/>好所以我不要再Y了我就把它切換到c<br/>倒在tem上做<br/>哎我要把他<br/>這些就clone過來<br/>OK好那我怎麼怎麼困惹擾git clone<br/>那我不確定他<br/>啊因為大<br/>應該要把每次成<br/>他的子模组的名<br/>在學號我們還沒做這件事<br/>但我不確定他有沒有子模組我用的是<br/>然後我要用SSH<br/>然後我的設定就要給他打開<br/>然後我的帳號因為大家都一樣是到期2024<br/>倉儲是其中報告2a是作業名稱然後MID我們打班他是第一組<br/>意思是說假設我已經有了這個session<br/>對應的key<br/>而且我已經open過了<br/>有這兩個條件的話<br/>我應該有權限把它抓下來那既然你用SSH有權限抓下來<br/>我改版之後就一定推的回去<br/>就這樣那我先看看我我<br/>假如我可以<br/>OK還可以啊所以我一定推的回去啊<br/>所以這個時候我在近端我就自由了我可以啟動動態<br/>好所以這時候我就進到2a因為我沒有特別<br/>就是2a的midag1<br/>就可以進來然後這裡先<br/>所以我在9443我各自獨立可以編輯<br/>我就從HTT<br/>TS然後我到local host的因為<br/>現在是local host的<br/>然後是9443<br/>哎我就可以自己編輯其他人都不能打擾我<br/>對吧好那我先改改一個東西<br/>OK我我登入哎呀這個時候因為是local host<br/>所以我可以很安全的用ABM進來<br/>哎那因為這在好<br/>所以我從這裡我在挖這個<br/>他總是會這樣好<br/>我随身碟可能太老了<br/>因為我是用隨身碟的可攜程式的<br/>好所以進來之後<br/>好所以他速度沒有非常快<br/>好所以我把這個弄進來<br/>github<br/>然後我call<br/>這時候怎麼辦<br/>好我我找一個<br/>那這個時候我我就直接去<br/>所以你看這個s被吊在外面<br/>然后好所以你就可以把这个s把它搬到两个地方来<br/>一個是搬到連結的show一個是搬到他的UL<br/>然後進來他就好了<br/>你要的<br/>是你要的<br/>超文件的<br/>你就可以偶爾繳<br/>的話你就可以除以然後我轉<br/>所以我這個時候我先試試看我能不能<br/>能不能把它推回去<br/>假如可以我就可以改版因為我應該有權限除非他把那個拔掉<br/>好好說現在暫時關<br/>就是我應該開兩個<br/>我告訴他說<br/>那麼哦所以我卡密的<br/>那假如我要讓我的組員<br/>直接連過來該怎麼辦<br/>我当然要先改密码了对吧那第二个我必须要知道我的IP吗好我的IP<br/>這我叫IP了哦<br/>我IP啊<br/>我把他卡車c下來<br/>對我要讓我這台變成是一台主機<br/>只需要跑到<br/>我現在應該在c槽<br/>在c tmp的這個<br/>我抓nit.py出來<br/>這個<br/>有沒有我在這裡<br/>然後我去抓這個答案來改<br/>然後把他的VIP丟給他不再用<br/>好吧儲存<br/>这个时候在CMS<br/>大家都可以动了<br/>OK<br/>然后他会通过防火墙<br/>刚应该有允许他的<br/>到这个9443了<br/>大家都能动哦<br/>那因为我没有要推<br/>我做完之后我就把这个留在这里<br/>然后你用一边弯就进来改没关系反正我也不会推<br/>哦那你就可以试试看<br/>就用这个IP<br/>不再推了<br/>好所以我就可以<br/>骗把他<br/>okay</p>
<h3><span>cd2024_2b_7_w2 利用 codespaces 維護分組網站</span></h3>
<p><span></span></p>
<h2>W3</h2>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<!-- editor2 結束 --><hr/>
<p>
<script src="https://unpkg.com/three@0.144.0/build/three.js" type="text/javascript"></script>
</p>