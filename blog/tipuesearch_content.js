var tipuesearch = {"pages":[{"title":"2024 Spring 課程w13","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 上課內容摘要： 本週的課程主要著重於可攜程式系統的概念和應用，特別是在 Windows 64 位元操作系統環境下的開發。我們討論了在不同操作系統下執行可攜程式系統的需求，並介紹了一些常用的開發工具和軟體，如Python、Git、CoppeliaSim等。此外，我們也探討了數位化與網路化對產品設計工程師的影響，以及如何應對未來協同設計的趨勢。 分組報告執行分工及進度整理： 個人與分組倉儲的建立及維護： 每位成員建立自己的個人倉儲，並將其與分組倉儲相連接。 確保個人倉儲的更新和維護工作。 Odoo PLM 系統設定與使用： 每個分組註冊一個Odoo帳號，並在其中建立免費的PLM模組。 將參考論文的協同翻譯流程作為工作項目，紀錄在PLM系統中。 教學影片製作與字幕添加： 分工製作教學影片，並添加字幕以提高觀看體驗。 整理影片逐字稿和教學重點，準備進行期中自評。 Siemens NX 1872安裝與設定： 要求每位學員下載並安裝Siemens NX 1872至個人設備，並完成認證後方可使用。 確保安裝過程順利進行並提供支援。 零組件繪圖與模擬： 使用Solvespace和Siemens NX完成鋼球平衡台零組件的繪製。 將零組件導入CoppeliaSim進行模擬，並建立競技場景。 以上工作分配和進度整理將有助於團隊高效地完成任務，確保每位成員都能充分發揮自己的能力並貢獻於團隊目標的實現。","tags":"w13","url":"./2024-Spring-W13-blog-tutorial.html"},{"title":"2024 Spring 課程w12","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 將各分組倉儲設為評分倉儲的子模組 實習任務二: 將分組倉儲設為評分網站子模組 2a 評分倉儲: https://github.com/mdecd2024/2astud-2asite 2b 評分倉儲: https://github.com/mdecd2024/2bstud-2bsite 以 2a 第一組分組倉儲 https://github.com/mdecd2024/2a-midag1 為例, 設為 2astud-2asite 倉儲名稱為 g1 的子模組指令為: git submodule add https://github.com/mdecd2024/2a-midag1 g1 其餘各班與各組的子模組則依序命名為 g1, g2, g3 ......, 依此類推. 各班評分倉儲的各組子模組設定完成後, 可以設法依照先前各組整合分組 LaTeX 報告與分組網誌的方法, 整合全班各組項下各學員的網誌文章 (.html 格式) 與執行專案報告 (.pdf 格式) 請各分組先在各組的分組網誌與分組報告中說明, 該如何將分組整合流程擴大到全班協同? cd2023 足球機器人網際場景模擬 實習任務三: 跨網路操控足球機器人進行競技 請各組從 https://github.com/mdecd2023/2a3-pj3ag4 下載該組當時所完成的倉儲資料, 並參考網際手足球機器人場景設計專案報告, 由各組員分別擔任場景競技球員, 利用鍵盤跨網路操控足球機器人進行球賽競技. 執行步驟: 在可攜程式系統安裝所需的 Python 模組: pip install pyzmq cbor keyboard 在近端電腦上取下倉儲內容: git clone https://github.com/mdecd2023/2a3-pj3ag4 球場、球員、數位計分器與類比計分器場景, 以及機器人球員控制程式位於: 2a3-pj3ag4\\downloads\\zmq_football 目錄 利用 CoppeliaSim 4.5.1 rev1 for IPv6.7z 開啟 zmq_football 目錄中的 site.ttt 利用可攜程式系統中的 SciTE 編輯器開啟 zmq_football 目錄中的 judge.py, 按下 Tools - Go 之後, CoppeliaSim 中的足球場景將開始進行模擬, 足球從球場正中央拋下, 兩隊球員完成列隊, 準備接受遠端 ZMQ RemoteAPI Python 程式操控, 以便進行球賽競技. 各球員操控程式可跨 IPv4 與 IPv6 網路對場景中的機器人球員進行控制, 球場即時畫面可由 http://球場所在電腦_IP_位址或符號名稱:23020 擷取, 球場與控制端的防火牆必須允許雙方 ZMQ 網路封包通過 port 23000 與 23020, 其中 23000 用於 Python 程式控制, 而 23020 則用於網際 Visualization Stream 影像串流用. 各球員控制端, 分別在各自電腦以可攜程式系統中的 SciTE 編輯器開啟 zmq_football 目錄中的 player.py, 並依據球員編號進行動作操控. 鍵盤中的 a 鍵控制球員向左轉, d 鍵控制球員向右轉, w 向前移動, s 向後移動, space 鍵翻身, 按下 shift 鍵將加速並轉向, 按下 q 鍵則終止模擬. 允許 Windows 防火牆開放 port 23000-23050 封包進出 CoppeliaSim 教學檔案: https://manual.coppeliarobotics.com/en/tutorials.htm Web-based 協同輔助設計程式 利用 Flask 從教務主機取下班級課表的網際程式, 包括從網頁表單或 URL 網路連結取得輸入變數, 然後透過伺服器上的電腦執行後續存檔或運算. 此一流程可運用在 Gogs, 也可應用於 NXopen Python(參考)","tags":"w12","url":"./2024-Spring-W12-blog-tutorial.html"},{"title":"2024 Spring 課程w11","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 鋼球平衡台自動控制系統模擬 請根據 Solvespace_model _2d_for_cd2024_w6.7z 零組件尺寸, 利用 Siemens NX1872.7z (需要登入 @nfu.edu.tw, cd2024 採用電腦安裝的 NX1872 或隨身碟中的 NX1872) 執行零組件繪圖, 完成後請將過程影片放入個人與分組網站中. 建立協同 Web-based 機電系統模擬設計必須涉及的議題包括： 如何使用 NX 執行零組件繪圖 - NX 參考資料 如何使用1872版安裝及可攜版 - NX1872 如何啓動及連網認證 - NX1872 了解啓動後用戶設定的存檔位置 - NX1872 認識 NX 的目錄模組架構 - NX 認識 NXOpen Python 程式延伸架構 - NXOpen 了解 Journal 程式設定、建立及執行（internal 及 run_journal.exe 用法） 了解如何針對設計繪圖尺寸單位選擇 - 建立新零件檔案時由 Units 選單選則 mm 或 inches 學習草圖建構、參數選用及長出特徵使用 - NX 參考資料 學習如何完成零件組立 - NX 參考資料 了解零組件轉檔相關知識（如選用零組件座標系統、STL格式及尺寸比例） 了解如何轉入 CoppeliaSim，如何選擇合用的尺寸及比例 了解如何進行場景組件的座標系統轉換 了解開放式機構及封閉式機構的場景如何設置 認識場景存檔的三種格式（binary與XML間的轉換及應用)及應用時機 瞭解如何運用 Web-based 場景模擬串流 學習如何建立場景控制程式（internal Lua、Python、Remoteapi Python、IPv4 Websocket&ZMQ vs IPv6 Websocket&ZMQ) 了解如何協同整理資料、編寫網誌、建立網際簡報及結案報告 各週指定任務 cd2024 協同產品設計實習課程專案的內容, 主要延續 CAD2023 課程重點, 然後再透過分組, 利用 Odoo PLM 相關文獻閱讀與應用作為協同產品開發流程的參考, 實際進行鋼球平衡台與綜合球賽機器人模擬系統的協同設計. 各週指定任務如下: 個人 cd2024 與分組倉儲的建立及維護. 各分組註冊一個 Odoo 帳號, 選用免費的 PLM 模組, 取得各分組的產品生命週期管理系統網域, 並將參考論文的協同翻譯流程作為工作項目, 在各分組的 PLM 網域系統中留下任務分配與紀錄, 最終產出為一份參考論文的中英文翻譯並列 pdf 檔案, 其中包含各組員的心得報告. 指定在參考論文的翻譯與閱讀過程, 將各組員的 cd2024 課程倉儲納為分組倉儲的子模組, 可以將各組員倉儲中的 LaTeX 原始資料, 整合至分組倉儲中, 採 Github Actions 或近端使用 MikTeX 建立分組的參考論文閱讀報告 pdf 檔案(教學). 要求各分組採協同方式, 在各教學影片上填上字幕並嵌入個人網站, 分工整理影片逐字稿與教學重點, 最後完成期中自評, 在期中考週將自評成績送至教務處. 要求下載 Siemens NX 1872 至個人隨身碟或電腦 (含筆電), 後續專案系統的零組件繪圖可採電腦輔助設計室固態硬碟所安裝的 NX1872 或隨身碟中的可攜系統, 必須透過連網取得認證後才能開啟. 提醒 CoppeliaSim 不同版本中存檔上的差異, 並強調 cd2024 將沿用 cad2023 課程中所使用的 4.5.1 版. 提示 各分組可以利用可攜式 Sourcetree 套件, 在近端充分了解個人倉儲與分組倉儲的各種改版或解決衝突議題. 在第七週摘要出 cd2024 各項分組協同模式的要點及執行方法. 在第八週說明如何應用 AI 協助先前閱讀論文, 整理資料以及延伸模擬程式的方法, 並提出既存鋼球平衡台控制與模擬的實習步驟. 第十週起, 要求學員完成三項實習任務.","tags":"w11","url":"./2024-Spring-W11-blog-tutorial.html"},{"title":"2024 Spring 課程w10","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 在第十週的實習中，我們充分利用了多種工具和技術，提升了在協同設計和實作中的能力。透過 Replit 平台的使用，我們能夠有效地維護和管理分組倉儲，這使得我們的協作更加順暢和高效。此外，在鋼球平衡台的實驗中，通過閱讀和總結多篇相關論文，我們深入了解了不同控制方法的優缺點，並應用這些知識來改進我們的設計。 尤其在 PID 控制和模擬的實驗中，我們學會了如何通過調整控制參數來優化系統的性能。這不僅加深了我們對控制理論的理解，也提高了我們實際動手操作的能力。最後，通過使用 Siemens NX 進行零組件繪圖，我們熟練掌握了從設計到實現的整個流程，並且體會到了團隊合作在複雜項目中的重要性。 總的來說，本週的實習讓我們對協同產品設計有了更深刻的認識和實踐經驗，為我們未來的學習和工作打下了堅實的基礎。","tags":"w10","url":"./2024-Spring-W10-blog-tutorial.html"},{"title":"2024 Spring 課程w9","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 協同產品設計實習的專案實習, 透過 ChatGPT、Gemini 1.5 Pro 與 Claude 3 的協助下進行. 協同資料處理 請各班各組根據 2a_cd2024_midterm.csv, 以及 2b_cd2024_midterm.csv 中的學號、Github 帳號與組別, 設法在各組員與分組網站中, 列出各學員的 cd2024 倉儲、網站, 以及各班各組的期中報告倉儲與網站連結. 過程中, 請詳細說明各組及學員的倉儲與網站中的連結資料如何建立? 手動輸入? 利用程式進行處理? 或者採分工合作方式建立? 2b step1 取出資料放入數列 鋼球平衡台 PID 控制與模擬 請下載 cd2024_ball_balancing_platform_control_ref.7z, 閱讀後請將摘要內容放入個人與分組網誌中. 對 Gemini 1.5 Pro 提問: 以下為利用 PID 控制 CoppeliaSim 鋼球平衡台場景的 ZMQ RemoteAPI Python 程式, 請利用 Python 模組將系統控制過程, 鋼球在平衡台上的 x 方向座標與 y 方向, 利用 matplotlib 畫出來. \"這裡附上原本的 PID 控制程式碼\"","tags":"w9","url":"./2024-Spring-W9-blog-tutorial.html"},{"title":"2024 Spring 課程w8","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 在這門協同產品設計實習課程中，我們使用了多種工具和技術來協同進行產品設計。首先，我們使用了 Github Classroom 來建立分組倉儲，並利用 cmsimde_site 作為倉儲的引擎目錄，通過 Python 編輯網頁，最後轉換為靜態網頁以展示產品設計過程的多媒體內容。 除了網站內容外，我們還使用 Pelican 管理網誌，並使用 Reveal 管理簡報。在每週的內容管理過程中，我們採用了四種不同的方法來進行 Python 網頁編輯，包括 Replit、Codespaces、Gitpod 和 localhost，這讓我們可以根據自己的喜好和環境選擇合適的工具。 在協同設計的架構上，我們設計了多種協同模式，包括分組網站內容的協同、分組報告內容的協同、分組產品設計的 PLM 協同、分組零組件設計的協同、分組模擬場景設計的協同和分組專案簡報設計的協同。這些協同模式使得我們能夠更有效地進行產品設計，並在實際應用中獲得更好的結果。 這門課程讓我們學到了許多有關協同產品設計的知識和技能，並通過實際操作提高了我們的能力。這對我們未來的工作和學習將會有很大的幫助。","tags":"w8","url":"./2024-Spring-W8-blog-tutorial.html"},{"title":"2024 Spring 課程w6","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 協同產品設計實習的第六週, 說明協同 NX 零組件繪圖以及 CoppeliaSim 場景模擬相關檔案格式. 註記: 以下教學影片雖經過除噪音處理, 但效果仍不好, 可能之後必須重新錄影. Github Actions 帶有子模組的 main.yml 設定 加入取子模組內容的 main.yml 設定","tags":"w6","url":"./2024-Spring-W6-blog-tutorial.html"},{"title":"2024 Spring 課程w5","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 協同產品設計實習的第五週, 教學內容為先前影片整理、分組網誌的統整與 NX 零組件繪圖. cd2024 2a w5 1 組員在 Replit 以 SSH 設定管理分組倉儲的權限 ODOO PLM 論文中英並列任務 教學影片分組整理並自評 如何統整組員子模組中的協同設計網誌","tags":"w5","url":"./2024-Spring-W5-blog-tutorial.html"},{"title":"2024 Spring 課程w4","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 協同產品設計實習的第四週, 各分組需要明確界定任務需求與分工時序, 隨著各組協同設計流程的進行, 分組倉儲與網站的改版越發複雜, 此時可導入 SourceTree 協助各組員更清楚看到倉儲改版歷程, 另外 Git Branch 的應用, 也可減少各學員階段性改版內容完成之前, 推向 Github 分組倉儲過程的合併次數. 教學影片分組整理並自評 w4 2a 分組任務 Github 個人與分組倉儲的維護方式","tags":"w4","url":"./2024-Spring-W4-blog-tutorial.html"},{"title":"2024 Spring 課程w3","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 列出期中分組倉儲與網站 cd2024 期中分組倉儲與網站 使用 Gitpod 維護倉儲與網站 將組員的個人倉儲設為分組倉儲子模組 利用可攜程式編譯 LaTeX","tags":"w3","url":"./2024-Spring-W3-blog-tutorial.html"},{"title":"2024 Spring 課程w2","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 我們在課堂上學習了許多有關使用 Github Classroom、Replit 和 Github Codespaces 的實用技巧。透過 Github Classroom，我們能夠輕鬆配置分組倉儲，讓每個組員都具有對倉儲的改版權限。在 Replit 中，我們學習了如何利用 SSH 連接到 Github 帳號下的特定倉儲，並解決了因為擁有者是 mdecd2024 帳號而無法授權的問題。此外，我們還討論了在 Replit 的免費帳號環境中維護授權資料的注意事項，以及如何最佳化使用 Github Codespaces 的免費 core hours。 另外，在比較 Odoo 與 SAP 時，我們參考了一份關於 Odoo 軟體在產品生命週期管理、製造執行系統及其整合上的功能分析。這些內容不僅讓我們熟悉了這些工具和軟體的使用方式，也讓我們更深入地了解了它們在實際應用中的差異和優缺點。這些學習將對我們未來的工作和學習帶來很大幫助。","tags":"w2","url":"./2024-Spring-W2-blog-tutorial.html"},{"title":"2024 Spring 課程w1","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 2024 Spring 協同產品設計實習的教學主要介紹 OnShape、Coppeliasim 與 Odoo PLM 在機械設計流程中的應用. 2a 建個人課程倉儲 將個人倉儲 import 至 Replit 設定 Github 帳號的雙重認證 下載可攜套件檔案 如何 import 倉儲至 Replit 進行改版 設定網誌 Odoo PLM 功能","tags":"w1","url":"./2024-Spring-blog-tutorial.html"},{"title":"2024 Spring 課程","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 上課內容摘要 本週的課程內容主要圍繞在Web開發技術與應用上，學習了HTML/CSS基礎、JavaScript簡介、前端框架介紹和後端開發入門等內容。通過本週的學習，我們深入了解了Web開發的基本概念和流程，對前端和後端的技術有了更深入的了解。 在HTML/CSS部分，我們學習了HTML標籤的使用方法和CSS的基本屬性設定，能夠編寫簡單的網頁並添加基本的樣式效果。在JavaScript方面，我們瞭解了JavaScript的基本語法和概念，並能夠實現一些簡單的互動效果，如按鈕點擊事件和表單驗證等。 此外，我們還介紹了常見的前端框架，如Bootstrap、React和Angular，以及它們的特點和應用場景。在後端開發入門部分，我們瞭解了後端開發的基本概念，如伺服器、資料庫和API等，並實作了簡單的後端應用，使用Node.js建立了一個簡單的伺服器和API。 心得 通過本週的學習，我對Web開發有了更深入的瞭解，尤其是前端和後端技術的整合和應用。我在實作的過程中遇到了一些困難，但通過查閱文檔和與同學討論，最終成功解決了問題，這讓我更加有信心和動力繼續學習和探索Web開發領域。 進度整理 在本週的學習中，我完成了大部分的課程內容和作業，包括HTML/CSS網頁的設計和排版、JavaScript的基本應用和簡單的互動效果實現，以及Node.js伺服器和API的建立。我還參與了小組項目的討論和分工安排，並根據分工完成了自己的任務。 在未來的學習中，我將繼續深入學習Web開發技術，包括更高級的前端框架和後端技術，並不斷提升自己的能力和水準，以應對日益複雜的Web開發需求。 這樣的摘要心得和進度整理可以讓你對本週的學習內容和成果有一個清晰的概覽，同時也有助於你對未來學習方向的規劃和思考。","tags":"w1","url":"./2024-Spring-w1-blog-tutorial.html"}]};