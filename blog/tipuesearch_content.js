var tipuesearch = {"pages":[{"title":"2024 Spring 課程w13","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 上課內容摘要： 本週的課程主要著重於可攜程式系統的概念和應用，特別是在 Windows 64 位元操作系統環境下的開發。我們討論了在不同操作系統下執行可攜程式系統的需求，並介紹了一些常用的開發工具和軟體，如Python、Git、CoppeliaSim等。此外，我們也探討了數位化與網路化對產品設計工程師的影響，以及如何應對未來協同設計的趨勢。 分組報告執行分工及進度整理： 個人與分組倉儲的建立及維護： 每位成員建立自己的個人倉儲，並將其與分組倉儲相連接。 確保個人倉儲的更新和維護工作。 Odoo PLM 系統設定與使用： 每個分組註冊一個Odoo帳號，並在其中建立免費的PLM模組。 將參考論文的協同翻譯流程作為工作項目，紀錄在PLM系統中。 教學影片製作與字幕添加： 分工製作教學影片，並添加字幕以提高觀看體驗。 整理影片逐字稿和教學重點，準備進行期中自評。 Siemens NX 1872安裝與設定： 要求每位學員下載並安裝Siemens NX 1872至個人設備，並完成認證後方可使用。 確保安裝過程順利進行並提供支援。 零組件繪圖與模擬： 使用Solvespace和Siemens NX完成鋼球平衡台零組件的繪製。 將零組件導入CoppeliaSim進行模擬，並建立競技場景。 以上工作分配和進度整理將有助於團隊高效地完成任務，確保每位成員都能充分發揮自己的能力並貢獻於團隊目標的實現。","tags":"w13","url":"./2024-Spring-W13-blog-tutorial.html"},{"title":"2024 Spring 課程w12","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 將各分組倉儲設為評分倉儲的子模組 實習任務二: 將分組倉儲設為評分網站子模組 2a 評分倉儲: https://github.com/mdecd2024/2astud-2asite 2b 評分倉儲: https://github.com/mdecd2024/2bstud-2bsite 以 2a 第一組分組倉儲 https://github.com/mdecd2024/2a-midag1 為例, 設為 2astud-2asite 倉儲名稱為 g1 的子模組指令為: git submodule add https://github.com/mdecd2024/2a-midag1 g1 其餘各班與各組的子模組則依序命名為 g1, g2, g3 ......, 依此類推. 各班評分倉儲的各組子模組設定完成後, 可以設法依照先前各組整合分組 LaTeX 報告與分組網誌的方法, 整合全班各組項下各學員的網誌文章 (.html 格式) 與執行專案報告 (.pdf 格式) 請各分組先在各組的分組網誌與分組報告中說明, 該如何將分組整合流程擴大到全班協同? cd2023 足球機器人網際場景模擬 實習任務三: 跨網路操控足球機器人進行競技 請各組從 https://github.com/mdecd2023/2a3-pj3ag4 下載該組當時所完成的倉儲資料, 並參考網際手足球機器人場景設計專案報告, 由各組員分別擔任場景競技球員, 利用鍵盤跨網路操控足球機器人進行球賽競技. 執行步驟: 在可攜程式系統安裝所需的 Python 模組: pip install pyzmq cbor keyboard 在近端電腦上取下倉儲內容: git clone https://github.com/mdecd2023/2a3-pj3ag4 球場、球員、數位計分器與類比計分器場景, 以及機器人球員控制程式位於: 2a3-pj3ag4\\downloads\\zmq_football 目錄 利用 CoppeliaSim 4.5.1 rev1 for IPv6.7z 開啟 zmq_football 目錄中的 site.ttt 利用可攜程式系統中的 SciTE 編輯器開啟 zmq_football 目錄中的 judge.py, 按下 Tools - Go 之後, CoppeliaSim 中的足球場景將開始進行模擬, 足球從球場正中央拋下, 兩隊球員完成列隊, 準備接受遠端 ZMQ RemoteAPI Python 程式操控, 以便進行球賽競技. 各球員操控程式可跨 IPv4 與 IPv6 網路對場景中的機器人球員進行控制, 球場即時畫面可由 http://球場所在電腦_IP_位址或符號名稱:23020 擷取, 球場與控制端的防火牆必須允許雙方 ZMQ 網路封包通過 port 23000 與 23020, 其中 23000 用於 Python 程式控制, 而 23020 則用於網際 Visualization Stream 影像串流用. 各球員控制端, 分別在各自電腦以可攜程式系統中的 SciTE 編輯器開啟 zmq_football 目錄中的 player.py, 並依據球員編號進行動作操控. 鍵盤中的 a 鍵控制球員向左轉, d 鍵控制球員向右轉, w 向前移動, s 向後移動, space 鍵翻身, 按下 shift 鍵將加速並轉向, 按下 q 鍵則終止模擬. 允許 Windows 防火牆開放 port 23000-23050 封包進出 CoppeliaSim 教學檔案: https://manual.coppeliarobotics.com/en/tutorials.htm Web-based 協同輔助設計程式 利用 Flask 從教務主機取下班級課表的網際程式, 包括從網頁表單或 URL 網路連結取得輸入變數, 然後透過伺服器上的電腦執行後續存檔或運算. 此一流程可運用在 Gogs, 也可應用於 NXopen Python(參考)","tags":"w12","url":"./2024-Spring-W12-blog-tutorial.html"},{"title":"2024 Spring 課程w11","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 鋼球平衡台自動控制系統模擬 請根據 Solvespace_model _2d_for_cd2024_w6.7z 零組件尺寸, 利用 Siemens NX1872.7z (需要登入 @nfu.edu.tw, cd2024 採用電腦安裝的 NX1872 或隨身碟中的 NX1872) 執行零組件繪圖, 完成後請將過程影片放入個人與分組網站中. 建立協同 Web-based 機電系統模擬設計必須涉及的議題包括： 如何使用 NX 執行零組件繪圖 - NX 參考資料 如何使用1872版安裝及可攜版 - NX1872 如何啓動及連網認證 - NX1872 了解啓動後用戶設定的存檔位置 - NX1872 認識 NX 的目錄模組架構 - NX 認識 NXOpen Python 程式延伸架構 - NXOpen 了解 Journal 程式設定、建立及執行（internal 及 run_journal.exe 用法） 了解如何針對設計繪圖尺寸單位選擇 - 建立新零件檔案時由 Units 選單選則 mm 或 inches 學習草圖建構、參數選用及長出特徵使用 - NX 參考資料 學習如何完成零件組立 - NX 參考資料 了解零組件轉檔相關知識（如選用零組件座標系統、STL格式及尺寸比例） 了解如何轉入 CoppeliaSim，如何選擇合用的尺寸及比例 了解如何進行場景組件的座標系統轉換 了解開放式機構及封閉式機構的場景如何設置 認識場景存檔的三種格式（binary與XML間的轉換及應用)及應用時機 瞭解如何運用 Web-based 場景模擬串流 學習如何建立場景控制程式（internal Lua、Python、Remoteapi Python、IPv4 Websocket&ZMQ vs IPv6 Websocket&ZMQ) 了解如何協同整理資料、編寫網誌、建立網際簡報及結案報告 各週指定任務 cd2024 協同產品設計實習課程專案的內容, 主要延續 CAD2023 課程重點, 然後再透過分組, 利用 Odoo PLM 相關文獻閱讀與應用作為協同產品開發流程的參考, 實際進行鋼球平衡台與綜合球賽機器人模擬系統的協同設計. 各週指定任務如下: 個人 cd2024 與分組倉儲的建立及維護. 各分組註冊一個 Odoo 帳號, 選用免費的 PLM 模組, 取得各分組的產品生命週期管理系統網域, 並將參考論文的協同翻譯流程作為工作項目, 在各分組的 PLM 網域系統中留下任務分配與紀錄, 最終產出為一份參考論文的中英文翻譯並列 pdf 檔案, 其中包含各組員的心得報告. 指定在參考論文的翻譯與閱讀過程, 將各組員的 cd2024 課程倉儲納為分組倉儲的子模組, 可以將各組員倉儲中的 LaTeX 原始資料, 整合至分組倉儲中, 採 Github Actions 或近端使用 MikTeX 建立分組的參考論文閱讀報告 pdf 檔案(教學). 要求各分組採協同方式, 在各教學影片上填上字幕並嵌入個人網站, 分工整理影片逐字稿與教學重點, 最後完成期中自評, 在期中考週將自評成績送至教務處. 要求下載 Siemens NX 1872 至個人隨身碟或電腦 (含筆電), 後續專案系統的零組件繪圖可採電腦輔助設計室固態硬碟所安裝的 NX1872 或隨身碟中的可攜系統, 必須透過連網取得認證後才能開啟. 提醒 CoppeliaSim 不同版本中存檔上的差異, 並強調 cd2024 將沿用 cad2023 課程中所使用的 4.5.1 版. 提示 各分組可以利用可攜式 Sourcetree 套件, 在近端充分了解個人倉儲與分組倉儲的各種改版或解決衝突議題. 在第七週摘要出 cd2024 各項分組協同模式的要點及執行方法. 在第八週說明如何應用 AI 協助先前閱讀論文, 整理資料以及延伸模擬程式的方法, 並提出既存鋼球平衡台控制與模擬的實習步驟. 第十週起, 要求學員完成三項實習任務.","tags":"w11","url":"./2024-Spring-W11-blog-tutorial.html"},{"title":"2024 Spring 課程w10","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 協同產品設計實習第十週實習操作, 透過 ChatGPT、Gemini 1.5 Pro 與 Claude 3 的協助下進行. W10 起 Replit 已經可以用來維護分組倉儲 Replit 帳號維護分組倉儲 建立各班學員的倉儲、網站與分組連結 這是 W10 實習的任務一: 已知: 2b 初步資料放入數列 可以將 2b.txt 即時資料取出, 並且將每一行隔開後, 逐一放入數列. 後續處理: 只要透過 for 重複迴圈, 就可以從上列資料中每位學員的基本資料 (學號、Github 帳號與組別) 中直接在網頁建立所需的 html. 學員倉儲連結 template: https://github.com/學員帳號/cd2024 學員網站連結 template: https://學員帳號.github.io/cd2024 2b 分組倉儲連結 template: https://github.com/mdecd2024/2b-midbg組別 2a 分組倉儲連結 template: https://github.com/mdecd2024/2a-midag組別 處理結果: 列出 2b 各學員評分相關網站 鋼球平衡台 PID 控制與模擬 這是 W10 實習的任務二: 請下載 cd2024_ball_balancing_platform_control_ref.7z, 閱讀後請將摘要內容放入個人與分組網誌中. 閱讀結果: 各篇論文要點摘要： 論文一：Construction and theoretical study of a ball balancing platform 探討自動控制理論在穩定動態系統時的局限性，以球體平衡平台為例。 建立球體平衡平台的理論模型，並與實際搭建的平台進行比較。 分析理論與實際結果之間的差異，探討控制理論與系統實施的挑戰。 結論： 線性控制可以實現球體平衡平台的良好性能，但存在靜態誤差。 理論與實際結果的差異主要來自於物理模型的誤差和電子元件的非理想特性。 穩定動態系統的性能受限於狀態調整的靈活性、控制器設計和輸入數據的準確性。 論文二：A real time control system for balancing a ball on a platform with FPGA parallel implementation 提出基於 PID 控制器的解決方案，以提高球體在平台上的位置調節精度。 使用 FPGA 實現平行計算，以提高系統速度和性能。 開發球體平衡平台的轉移函數，並合成 PID 控制器。 結論： 透過 FPGA 平行計算實現的 PID 控制器能有效提高球體位置調節精度。 該方案可應用於控制具有多個參數的高速物件。 論文三：Simulation and Experimental Study of Ball Position Control at Biaxial Platform using State Space Approach 設計和比較三種控制結構，用於自動穩定球體在平台上的位置和軌跡追踪：PD 控制器、狀態空間反饋和帶狀態空間回饋的狀態空間觀測器。 使用牛頓法推導球體平衡平台的數學模型，並設計直流電機位置迴路控制。 結論： 三種控制結構均能實現穩定控制，但狀態空間觀測器具有最佳性能。 該研究建立了一個教育平台，用於向非技術人員解釋基本控制系統原理。 論文四：Design and Implementation a Ball Balancing System for Control Theory Course 開發一個球體平衡系統，使用微控制器和控制演算法來調節球體在梁上的平衡。 利用超聲波傳感器獲取球體位置，並使用 PID 控制演算法調整梁的角度。 開發介面程式，將即時位置曲線繪製在 MATLAB 中。 結論： 球體平衡系統是一個低成本的教育工具，可用於教授控制理論的應用。 該系統允許學生將理論知識應用於實踐中，並了解封閉迴路回饋系統和 PID 演算法的原理。 論文五：Ball on the plate balancing control system 設計一個二自由度球體平衡實驗平台，用於測試和驗證平衡控制演算法。 使用電阻式觸摸屏獲取球體位置數據，使用步進電機和位置傳感器控制平台傾斜角度。 設計基於 AVR 微控制器的雙環下屬控制系統，使用 PID 控制器維持球體平衡。 結論： 該系統使用步進電機替代伺服電機，並無需外部電腦進行圖像處理，具有成本效益和易於控制的優勢。 未來計劃改進球體位置回饋信號的濾波，以提高控制系統的速度和品質。 論文六：2D Ball Balancer Control using QUARC 使用 QUARC 軟體設計和實現球體在二維平台上的位置控制。 設計 PD 和 PID 控制器，並探討設定點權重和積分器抗飽和等控制技術。 使用攝像頭讀取球體位置，並進行校準和轉換。 結論： PD 和 PID 控制器均能實現球體位置控制，但 PID 控制器在跟踪斜坡和正弦參考信號時具有更好的性能。 該實驗涵蓋了建模、控制器設計、模擬和實施等多個控制系統的關鍵步驟，為學生提供了寶貴的學習經驗。 接下來, 必須要設法了解, 哪一篇或哪幾篇論文對我們解決下列問題最有參考價值! 請從下列檔案中, 在個人與分組網站中說明從零組件繪圖、轉入 CoppeliaSim, 並透過 PID 控制後, 展示在不同的控制參數設定, 鋼球的 x 座標與 y 座標運動路徑圖. ball_beam_balancing_PID_control_coppeliasim_1d_and_2d_cd2024_w9.7z (password required to download) Solvespace_model _2d_for_cd2024_w6.7z 實習步驟: 開啟可攜程式系統中的 CoppeliaSim 開啟鋼球平衡台模擬場景 啟動可攜程式系統, pip install keyboard cbor pyzmq matplotlib 在 SciTE 中執行上列程式, 確定系統穩定後, 按下 q 終止模擬 matplotlib 將畫出鋼球在平台上的 x 與 y 座標圖 鋼球平衡台零組件繪圖 這是 W10 實習的任務三: 請根據 Solvespace_model _2d_for_cd2024_w6.7z 零組件尺寸, 利用 Siemens NX1872.7z (需要登入 @nfu.edu.tw, cd2024 採用電腦安裝的 NX1872 或隨身碟中的 NX1872) 執行零組件繪圖, 完成後請將過程影片放入個人與分組網站中.","tags":"w10","url":"./2024-Spring-W10-blog-tutorial.html"},{"title":"2024 Spring 課程w9","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 協同產品設計實習的專案實習, 透過 ChatGPT、Gemini 1.5 Pro 與 Claude 3 的協助下進行. 協同資料處理 請各班各組根據 2a_cd2024_midterm.csv, 以及 2b_cd2024_midterm.csv 中的學號、Github 帳號與組別, 設法在各組員與分組網站中, 列出各學員的 cd2024 倉儲、網站, 以及各班各組的期中報告倉儲與網站連結. 過程中, 請詳細說明各組及學員的倉儲與網站中的連結資料如何建立? 手動輸入? 利用程式進行處理? 或者採分工合作方式建立? 2b step1 取出資料放入數列 鋼球平衡台 PID 控制與模擬 請下載 cd2024_ball_balancing_platform_control_ref.7z, 閱讀後請將摘要內容放入個人與分組網誌中. 對 Gemini 1.5 Pro 提問: 以下為利用 PID 控制 CoppeliaSim 鋼球平衡台場景的 ZMQ RemoteAPI Python 程式, 請利用 Python 模組將系統控制過程, 鋼球在平衡台上的 x 方向座標與 y 方向, 利用 matplotlib 畫出來. \"這裡附上原本的 PID 控制程式碼\"","tags":"w9","url":"./2024-Spring-W9-blog-tutorial.html"},{"title":"2024 Spring 課程w8","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 內容管理系統 cd2024 2a w8 產品協同架構說明 協同產品設計實習課程使用網際內容管理系統, 採 Github Classroom 建立分組倉儲, 並由學員自行利用 cmsimde_site 作為 Github 倉儲的引擎目錄, 利用 Python 執行網頁編輯. 之後再轉檔為靜態網頁, 以便利用 Github Pages 所提供的 WWW 伺服器呈現協同產品設計過程的相關多媒體內容. 除了章節式的網站外, cmsimde_site 還額外利用 Pelican 管理使用者所建立的網誌, 以及利用 Reveal 管理使用者所建立的網際簡報. 在使用者每週的內容管理過程, 由於必須採用 Python 執行網頁編輯, cd2024 課程採用了四種不同的方法進行, 其中包括 Replit、Codespaces、Gitpod 以及 localhost. 由於前三者屬於雲端作業, 各有不同的使用規定與免費使用權限, 對於多人協同的產品設計團隊而言, 可以根據各自的喜好與環境選擇合用的網頁編輯工具, 且在多方了解下也可透過實際使用發展中的雲端 IDE 環境, 一窺未來可能的 AI 導引前景. 從協同設計的架構上, 個人與分組的倉儲中, 總共設計了以下幾種內容的協同模式: 分組網站內容的協同 - 其中包括章節式的網站內容與網誌內容, 可以透過 Python 程式方法整合各學員子模組中的 config/content.htm 以及 markdown/*.md 檔案至分組網站中 分組報告內容的協同 - 採用的是 Github Actions 與近端 MikTeX 中的 xelatex 將 .tex 轉為 pdf 的整合過程 分組產品設計的 PLM 協同 - 採用的是 Odoo PLM 模組, 讓各分組可以將網站內容、報告內容視為產品, 從協同架構的訂定作為起點, 完成資料展示作為終點, 逐一將過程的協調、派任與執行方法納入 PLM 系統管理 分組零組件設計的協同 - 分別採用 Solvespace 作為鋼球平衡台範例, 讓學員使用 Siemens NX 1872 進行協同零組件繪圖設計, 並將各零件的 .prt 檔案納入各學員的倉儲進行組立, 以便找出最佳的設計分工以及零組件轉檔流程 分組模擬場景設計的協同 - 當各分組順利完成鋼球平衡台的零組件轉檔後, 一旦進入 CoppeliaSim 場景後, 必須逐一配置感測器 (Sensors)、致動器 (Actuators) 以及 ZMQ RemoteAPI Python程式, 主要探討如何將此一場景模擬過程在 CoppeliaSim XML 檔案格式與 Siemens NXOpen Python 零件程式檔案間, 找到合用或最佳的協同產品設計模式. 分組專案簡報設計的協同 - 在上述各產品設計階段所累積的各種資料, 該如何有效整合到專案完成後必須進行的網際簡報中. 分組網站內容的協同","tags":"w8","url":"./2024-Spring-W8-blog-tutorial.html"},{"title":"2024 Spring 課程w6","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 協同產品設計實習的第六週, 說明協同 NX 零組件繪圖以及 CoppeliaSim 場景模擬相關檔案格式. 註記: 以下教學影片雖經過除噪音處理, 但效果仍不好, 可能之後必須重新錄影. Github Actions 帶有子模組的 main.yml 設定 加入取子模組內容的 main.yml 設定","tags":"w6","url":"./2024-Spring-W6-blog-tutorial.html"},{"title":"2024 Spring 課程w5","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 協同產品設計實習的第五週, 教學內容為先前影片整理、分組網誌的統整與 NX 零組件繪圖. cd2024 2a w5 1 組員在 Replit 以 SSH 設定管理分組倉儲的權限 ODOO PLM 論文中英並列任務 教學影片分組整理並自評 如何統整組員子模組中的協同設計網誌","tags":"w5","url":"./2024-Spring-W5-blog-tutorial.html"},{"title":"2024 Spring 課程w4","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 協同產品設計實習的第四週, 各分組需要明確界定任務需求與分工時序, 隨著各組協同設計流程的進行, 分組倉儲與網站的改版越發複雜, 此時可導入 SourceTree 協助各組員更清楚看到倉儲改版歷程, 另外 Git Branch 的應用, 也可減少各學員階段性改版內容完成之前, 推向 Github 分組倉儲過程的合併次數. 教學影片分組整理並自評 w4 2a 分組任務 Github 個人與分組倉儲的維護方式","tags":"w4","url":"./2024-Spring-W4-blog-tutorial.html"},{"title":"2024 Spring 課程w3","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 列出期中分組倉儲與網站 cd2024 期中分組倉儲與網站 使用 Gitpod 維護倉儲與網站 將組員的個人倉儲設為分組倉儲子模組 利用可攜程式編譯 LaTeX","tags":"w3","url":"./2024-Spring-W3-blog-tutorial.html"},{"title":"2024 Spring 課程w2","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 利用 Github Classroom 指定分組倉儲 由於各分組網站從 Github Classroom 執行配置, 因此該倉儲位於 mdecd2024 帳號下, 雖然各組組員具備對此分組倉儲改版的權限, 但是若將分組倉儲 import 到 Replit, 因為其倉儲擁有者為 mdecd2024, 因此無法從 Replit accoount 項下進行授權, 但是可以利用 ssh-keygen 建立 .ssh 目錄下的 id_rsa 與 id_rsa.pub, 之後除了將公鑰送到 Github 之外, 還需要在 .ssh 目錄中建立 config, 且將倉儲 .git/config 中的 https 協定改為 SSH. 根據上述流程, 可以在 Replit 中以 SSH 模式取得對 Github 帳號下特定倉儲的改版全縣, 只不過 Replit 的免費帳號環境會不定時刪除 /home/runner/.ssh 目錄中的授權資料, 因此若要使用 Replit 維護從 Github Classroom 取得授權的分組倉儲, 必須使用程式方法配置 .ssh 中的 id_rsa 與 config 檔案. 由於 Github Codespaces 免費帳號目前每月可以使用 120 core hours, 因此使用者可以選擇在 Github 倉儲中編輯 markdown 目錄中的網誌 .md 文章後, 只在需要利用 pelican 轉檔或啟動編輯 config/content.htm 與轉靜態網頁內容時, 才啟用 Codespaces. 如此可以最佳化使用 Codespaces 的免費 core hours. ODOO 參考資料 https://www.google.com/search?q=sap+vs+odoo (與 SAP 及 ODOO 有關的搜尋) 2021 ANALYSIS OF THE ODOO SOFTWARE CAPABILITIES REGARDING PRODUCT LIFECYCLE MANAGEMENT, MANUFACTURING EXECUTION SYSTEMS AND THEIR INTEGRATION.pdf or local download (password required) (Odoo 軟體在產品生命週期管理、製造執行系統及其整合上的功能分析)","tags":"w2","url":"./2024-Spring-W2-blog-tutorial.html"},{"title":"2024 Spring 課程w1","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 2024 Spring 協同產品設計實習的教學主要介紹 OnShape、Coppeliasim 與 Odoo PLM 在機械設計流程中的應用. 2a 建個人課程倉儲 將個人倉儲 import 至 Replit 設定 Github 帳號的雙重認證 下載可攜套件檔案 如何 import 倉儲至 Replit 進行改版 設定網誌 Odoo PLM 功能","tags":"w1","url":"./2024-Spring-blog-tutorial.html"},{"title":"2024 Spring 課程","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 內容管理系統3 使用者可以自行利用 cmsimde_site 倉儲作為 Template, 建立自己的網站內容管理系統. 引用網站網址連結的方法: cmsimde_site - 在文章中多次引用同一個網站連結時, 可以使用此種方法. https://github.com/mdecycu/cmsimde_site - 假如想要快速將網址套用 html 網站連結, 可以使用此種方法. cmsimde_site - 也可以使用 Markdown 的標準網站連結使用格式. # 引用 Python 程式的方法 for i in range(10): print(i, \"列出字串\") 也可以直接在 .md 檔案中使用 html 標註, 或加入 Javascript 或 Brython 程式碼. 從 1 累加到 100: 1 add to 100 將 iterable 與 iterator 相關說明 , 利用 Brython 與 Ace Editor 整理在這個頁面. Filename: .py Run Output 清除輸出區 清除繪圖區 Reload 從 1 累加到 100 part2: 1 add to 100 cango_three_gears BSnake AI Tetris Rotating Block Filename: .py Run Output 清除輸出區 清除繪圖區 Reload","tags":"w1","url":"./2024-Spring-w1-blog-tutorial.html"}]};